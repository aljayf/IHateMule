/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.C300;
import org.openapitools.client.model.C328;
import org.openapitools.client.model.C337;
import org.openapitools.client.model.EDIFACTID3207;
import org.openapitools.client.model.EDIFACTID9906;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ABI
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class ABI {
  public static final String SERIALIZED_NAME_C33701 = "C337_01";
  @SerializedName(SERIALIZED_NAME_C33701)
  private C337 C337_01;

  public static final String SERIALIZED_NAME_C30002 = "C300_02";
  @SerializedName(SERIALIZED_NAME_C30002)
  private C300 C300_02;

  public static final String SERIALIZED_NAME_C32803 = "C328_03";
  @SerializedName(SERIALIZED_NAME_C32803)
  private C328 C328_03;

  public static final String SERIALIZED_NAME_COUNTRY04 = "Country_04";
  @SerializedName(SERIALIZED_NAME_COUNTRY04)
  private EDIFACTID3207 country04;

  public static final String SERIALIZED_NAME_COMPANY_IDENTIFICATION05 = "CompanyIdentification_05";
  @SerializedName(SERIALIZED_NAME_COMPANY_IDENTIFICATION05)
  private EDIFACTID9906 companyIdentification05;

  public ABI() {
  }

  public ABI C337_01(C337 C337_01) {
    
    this.C337_01 = C337_01;
    return this;
  }

   /**
   * Get C337_01
   * @return C337_01
  **/
  @javax.annotation.Nonnull

  public C337 getC33701() {
    return C337_01;
  }


  public void setC33701(C337 C337_01) {
    this.C337_01 = C337_01;
  }


  public ABI C300_02(C300 C300_02) {
    
    this.C300_02 = C300_02;
    return this;
  }

   /**
   * Get C300_02
   * @return C300_02
  **/
  @javax.annotation.Nullable

  public C300 getC30002() {
    return C300_02;
  }


  public void setC30002(C300 C300_02) {
    this.C300_02 = C300_02;
  }


  public ABI C328_03(C328 C328_03) {
    
    this.C328_03 = C328_03;
    return this;
  }

   /**
   * Get C328_03
   * @return C328_03
  **/
  @javax.annotation.Nullable

  public C328 getC32803() {
    return C328_03;
  }


  public void setC32803(C328 C328_03) {
    this.C328_03 = C328_03;
  }


  public ABI country04(EDIFACTID3207 country04) {
    
    this.country04 = country04;
    return this;
  }

   /**
   * Get country04
   * @return country04
  **/
  @javax.annotation.Nullable

  public EDIFACTID3207 getCountry04() {
    return country04;
  }


  public void setCountry04(EDIFACTID3207 country04) {
    this.country04 = country04;
  }


  public ABI companyIdentification05(EDIFACTID9906 companyIdentification05) {
    
    this.companyIdentification05 = companyIdentification05;
    return this;
  }

   /**
   * Get companyIdentification05
   * @return companyIdentification05
  **/
  @javax.annotation.Nullable

  public EDIFACTID9906 getCompanyIdentification05() {
    return companyIdentification05;
  }


  public void setCompanyIdentification05(EDIFACTID9906 companyIdentification05) {
    this.companyIdentification05 = companyIdentification05;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ABI ABI = (ABI) o;
    return Objects.equals(this.C337_01, ABI.C337_01) &&
        Objects.equals(this.C300_02, ABI.C300_02) &&
        Objects.equals(this.C328_03, ABI.C328_03) &&
        Objects.equals(this.country04, ABI.country04) &&
        Objects.equals(this.companyIdentification05, ABI.companyIdentification05);
  }

  @Override
  public int hashCode() {
    return Objects.hash(C337_01, C300_02, C328_03, country04, companyIdentification05);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ABI {\n");
    sb.append("    C337_01: ").append(toIndentedString(C337_01)).append("\n");
    sb.append("    C300_02: ").append(toIndentedString(C300_02)).append("\n");
    sb.append("    C328_03: ").append(toIndentedString(C328_03)).append("\n");
    sb.append("    country04: ").append(toIndentedString(country04)).append("\n");
    sb.append("    companyIdentification05: ").append(toIndentedString(companyIdentification05)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("C337_01");
    openapiFields.add("C300_02");
    openapiFields.add("C328_03");
    openapiFields.add("Country_04");
    openapiFields.add("CompanyIdentification_05");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("C337_01");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ABI
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ABI.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ABI is not found in the empty JSON string", ABI.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ABI.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ABI` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ABI.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `C337_01`
      C337.validateJsonObject(jsonObj.getAsJsonObject("C337_01"));
      // validate the optional field `C300_02`
      if (jsonObj.get("C300_02") != null && !jsonObj.get("C300_02").isJsonNull()) {
        C300.validateJsonObject(jsonObj.getAsJsonObject("C300_02"));
      }
      // validate the optional field `C328_03`
      if (jsonObj.get("C328_03") != null && !jsonObj.get("C328_03").isJsonNull()) {
        C328.validateJsonObject(jsonObj.getAsJsonObject("C328_03"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ABI.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ABI' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ABI> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ABI.class));

       return (TypeAdapter<T>) new TypeAdapter<ABI>() {
           @Override
           public void write(JsonWriter out, ABI value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ABI read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ABI given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ABI
  * @throws IOException if the JSON string is invalid with respect to ABI
  */
  public static ABI fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ABI.class);
  }

 /**
  * Convert an instance of ABI to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

