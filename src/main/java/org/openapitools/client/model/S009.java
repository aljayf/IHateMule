/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.EDIFACTID0051;
import org.openapitools.client.model.EDIFACTID0113;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * S009
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class S009 {
  public static final String SERIALIZED_NAME_MESSAGE_TYPE01 = "MessageType_01";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TYPE01)
  private String messageType01;

  public static final String SERIALIZED_NAME_MESSAGE_VERSION_NUMBER02 = "MessageVersionNumber_02";
  @SerializedName(SERIALIZED_NAME_MESSAGE_VERSION_NUMBER02)
  private String messageVersionNumber02;

  public static final String SERIALIZED_NAME_MESSAGE_RELEASE_NUMBER03 = "MessageReleaseNumber_03";
  @SerializedName(SERIALIZED_NAME_MESSAGE_RELEASE_NUMBER03)
  private String messageReleaseNumber03;

  public static final String SERIALIZED_NAME_CONTROLLING_AGENCY_CODED04 = "ControllingAgencyCoded_04";
  @SerializedName(SERIALIZED_NAME_CONTROLLING_AGENCY_CODED04)
  private EDIFACTID0051 controllingAgencyCoded04;

  public static final String SERIALIZED_NAME_ASSOCIATION_ASSIGNED_CODE05 = "AssociationAssignedCode_05";
  @SerializedName(SERIALIZED_NAME_ASSOCIATION_ASSIGNED_CODE05)
  private String associationAssignedCode05;

  public static final String SERIALIZED_NAME_CODELIST_DIRECTORY_VERSION_NUMBER06 = "CodelistDirectoryVersionNumber_06";
  @SerializedName(SERIALIZED_NAME_CODELIST_DIRECTORY_VERSION_NUMBER06)
  private String codelistDirectoryVersionNumber06;

  public static final String SERIALIZED_NAME_MESSAGE_TYPE_SUBFUNCTION_IDENTIFICATION07 = "MessageTypeSubfunctionIdentification_07";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TYPE_SUBFUNCTION_IDENTIFICATION07)
  private EDIFACTID0113 messageTypeSubfunctionIdentification07;

  public S009() {
  }

  public S009 messageType01(String messageType01) {
    
    this.messageType01 = messageType01;
    return this;
  }

   /**
   * Get messageType01
   * @return messageType01
  **/
  @javax.annotation.Nonnull

  public String getMessageType01() {
    return messageType01;
  }


  public void setMessageType01(String messageType01) {
    this.messageType01 = messageType01;
  }


  public S009 messageVersionNumber02(String messageVersionNumber02) {
    
    this.messageVersionNumber02 = messageVersionNumber02;
    return this;
  }

   /**
   * Get messageVersionNumber02
   * @return messageVersionNumber02
  **/
  @javax.annotation.Nonnull

  public String getMessageVersionNumber02() {
    return messageVersionNumber02;
  }


  public void setMessageVersionNumber02(String messageVersionNumber02) {
    this.messageVersionNumber02 = messageVersionNumber02;
  }


  public S009 messageReleaseNumber03(String messageReleaseNumber03) {
    
    this.messageReleaseNumber03 = messageReleaseNumber03;
    return this;
  }

   /**
   * Get messageReleaseNumber03
   * @return messageReleaseNumber03
  **/
  @javax.annotation.Nonnull

  public String getMessageReleaseNumber03() {
    return messageReleaseNumber03;
  }


  public void setMessageReleaseNumber03(String messageReleaseNumber03) {
    this.messageReleaseNumber03 = messageReleaseNumber03;
  }


  public S009 controllingAgencyCoded04(EDIFACTID0051 controllingAgencyCoded04) {
    
    this.controllingAgencyCoded04 = controllingAgencyCoded04;
    return this;
  }

   /**
   * Get controllingAgencyCoded04
   * @return controllingAgencyCoded04
  **/
  @javax.annotation.Nonnull

  public EDIFACTID0051 getControllingAgencyCoded04() {
    return controllingAgencyCoded04;
  }


  public void setControllingAgencyCoded04(EDIFACTID0051 controllingAgencyCoded04) {
    this.controllingAgencyCoded04 = controllingAgencyCoded04;
  }


  public S009 associationAssignedCode05(String associationAssignedCode05) {
    
    this.associationAssignedCode05 = associationAssignedCode05;
    return this;
  }

   /**
   * Get associationAssignedCode05
   * @return associationAssignedCode05
  **/
  @javax.annotation.Nullable

  public String getAssociationAssignedCode05() {
    return associationAssignedCode05;
  }


  public void setAssociationAssignedCode05(String associationAssignedCode05) {
    this.associationAssignedCode05 = associationAssignedCode05;
  }


  public S009 codelistDirectoryVersionNumber06(String codelistDirectoryVersionNumber06) {
    
    this.codelistDirectoryVersionNumber06 = codelistDirectoryVersionNumber06;
    return this;
  }

   /**
   * Get codelistDirectoryVersionNumber06
   * @return codelistDirectoryVersionNumber06
  **/
  @javax.annotation.Nullable

  public String getCodelistDirectoryVersionNumber06() {
    return codelistDirectoryVersionNumber06;
  }


  public void setCodelistDirectoryVersionNumber06(String codelistDirectoryVersionNumber06) {
    this.codelistDirectoryVersionNumber06 = codelistDirectoryVersionNumber06;
  }


  public S009 messageTypeSubfunctionIdentification07(EDIFACTID0113 messageTypeSubfunctionIdentification07) {
    
    this.messageTypeSubfunctionIdentification07 = messageTypeSubfunctionIdentification07;
    return this;
  }

   /**
   * Get messageTypeSubfunctionIdentification07
   * @return messageTypeSubfunctionIdentification07
  **/
  @javax.annotation.Nullable

  public EDIFACTID0113 getMessageTypeSubfunctionIdentification07() {
    return messageTypeSubfunctionIdentification07;
  }


  public void setMessageTypeSubfunctionIdentification07(EDIFACTID0113 messageTypeSubfunctionIdentification07) {
    this.messageTypeSubfunctionIdentification07 = messageTypeSubfunctionIdentification07;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    S009 S009 = (S009) o;
    return Objects.equals(this.messageType01, S009.messageType01) &&
        Objects.equals(this.messageVersionNumber02, S009.messageVersionNumber02) &&
        Objects.equals(this.messageReleaseNumber03, S009.messageReleaseNumber03) &&
        Objects.equals(this.controllingAgencyCoded04, S009.controllingAgencyCoded04) &&
        Objects.equals(this.associationAssignedCode05, S009.associationAssignedCode05) &&
        Objects.equals(this.codelistDirectoryVersionNumber06, S009.codelistDirectoryVersionNumber06) &&
        Objects.equals(this.messageTypeSubfunctionIdentification07, S009.messageTypeSubfunctionIdentification07);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageType01, messageVersionNumber02, messageReleaseNumber03, controllingAgencyCoded04, associationAssignedCode05, codelistDirectoryVersionNumber06, messageTypeSubfunctionIdentification07);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class S009 {\n");
    sb.append("    messageType01: ").append(toIndentedString(messageType01)).append("\n");
    sb.append("    messageVersionNumber02: ").append(toIndentedString(messageVersionNumber02)).append("\n");
    sb.append("    messageReleaseNumber03: ").append(toIndentedString(messageReleaseNumber03)).append("\n");
    sb.append("    controllingAgencyCoded04: ").append(toIndentedString(controllingAgencyCoded04)).append("\n");
    sb.append("    associationAssignedCode05: ").append(toIndentedString(associationAssignedCode05)).append("\n");
    sb.append("    codelistDirectoryVersionNumber06: ").append(toIndentedString(codelistDirectoryVersionNumber06)).append("\n");
    sb.append("    messageTypeSubfunctionIdentification07: ").append(toIndentedString(messageTypeSubfunctionIdentification07)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MessageType_01");
    openapiFields.add("MessageVersionNumber_02");
    openapiFields.add("MessageReleaseNumber_03");
    openapiFields.add("ControllingAgencyCoded_04");
    openapiFields.add("AssociationAssignedCode_05");
    openapiFields.add("CodelistDirectoryVersionNumber_06");
    openapiFields.add("MessageTypeSubfunctionIdentification_07");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("MessageType_01");
    openapiRequiredFields.add("MessageVersionNumber_02");
    openapiRequiredFields.add("MessageReleaseNumber_03");
    openapiRequiredFields.add("ControllingAgencyCoded_04");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to S009
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!S009.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in S009 is not found in the empty JSON string", S009.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!S009.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `S009` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : S009.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("MessageType_01").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MessageType_01` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MessageType_01").toString()));
      }
      if (!jsonObj.get("MessageVersionNumber_02").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MessageVersionNumber_02` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MessageVersionNumber_02").toString()));
      }
      if (!jsonObj.get("MessageReleaseNumber_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MessageReleaseNumber_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MessageReleaseNumber_03").toString()));
      }
      if ((jsonObj.get("AssociationAssignedCode_05") != null && !jsonObj.get("AssociationAssignedCode_05").isJsonNull()) && !jsonObj.get("AssociationAssignedCode_05").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AssociationAssignedCode_05` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AssociationAssignedCode_05").toString()));
      }
      if ((jsonObj.get("CodelistDirectoryVersionNumber_06") != null && !jsonObj.get("CodelistDirectoryVersionNumber_06").isJsonNull()) && !jsonObj.get("CodelistDirectoryVersionNumber_06").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CodelistDirectoryVersionNumber_06` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CodelistDirectoryVersionNumber_06").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!S009.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'S009' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<S009> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(S009.class));

       return (TypeAdapter<T>) new TypeAdapter<S009>() {
           @Override
           public void write(JsonWriter out, S009 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public S009 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of S009 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of S009
  * @throws IOException if the JSON string is invalid with respect to S009
  */
  public static S009 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, S009.class);
  }

 /**
  * Convert an instance of S009 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

