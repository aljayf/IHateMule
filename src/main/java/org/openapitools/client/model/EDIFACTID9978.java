/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets EDIFACT_ID_9978
 */
@JsonAdapter(EDIFACTID9978.Adapter.class)
public enum EDIFACTID9978 {
  
  _700("700"),
  
  _701("701"),
  
  _702("702"),
  
  AR("AR"),
  
  BA("BA"),
  
  BK("BK"),
  
  CL("CL"),
  
  D("D"),
  
  E("E"),
  
  G("G"),
  
  LA("LA"),
  
  LG("LG"),
  
  MV("MV"),
  
  SO("SO"),
  
  ST("ST"),
  
  TA("TA");

  private String value;

  EDIFACTID9978(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EDIFACTID9978 fromValue(String value) {
    for (EDIFACTID9978 b : EDIFACTID9978.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EDIFACTID9978> {
    @Override
    public void write(final JsonWriter jsonWriter, final EDIFACTID9978 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EDIFACTID9978 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EDIFACTID9978.fromValue(value);
    }
  }
}

