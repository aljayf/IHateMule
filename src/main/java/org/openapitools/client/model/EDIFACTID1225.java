/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets EDIFACT_ID_1225
 */
@JsonAdapter(EDIFACTID1225.Adapter.class)
public enum EDIFACTID1225 {
  
  _1("1"),
  
  _10("10"),
  
  _100("100"),
  
  _101("101"),
  
  _102("102"),
  
  _103("103"),
  
  _104("104"),
  
  _105("105"),
  
  _106("106"),
  
  _107("107"),
  
  _108("108"),
  
  _109("109"),
  
  _11("11"),
  
  _110("110"),
  
  _111("111"),
  
  _112("112"),
  
  _113("113"),
  
  _114("114"),
  
  _115("115"),
  
  _116("116"),
  
  _117("117"),
  
  _118("118"),
  
  _119("119"),
  
  _12("12"),
  
  _121("121"),
  
  _122("122"),
  
  _13("13"),
  
  _130("130"),
  
  _131("131"),
  
  _132("132"),
  
  _133("133"),
  
  _134("134"),
  
  _135("135"),
  
  _137("137"),
  
  _139("139"),
  
  _14("14"),
  
  _140("140"),
  
  _141("141"),
  
  _142("142"),
  
  _143("143"),
  
  _144("144"),
  
  _145("145"),
  
  _146("146"),
  
  _15("15"),
  
  _150("150"),
  
  _151("151"),
  
  _152("152"),
  
  _153("153"),
  
  _154("154"),
  
  _155("155"),
  
  _156("156"),
  
  _157("157"),
  
  _16("16"),
  
  _160("160"),
  
  _161("161"),
  
  _162("162"),
  
  _163("163"),
  
  _164("164"),
  
  _165("165"),
  
  _166("166"),
  
  _167("167"),
  
  _168("168"),
  
  _169("169"),
  
  _17("17"),
  
  _170("170"),
  
  _171("171"),
  
  _172("172"),
  
  _173("173"),
  
  _174("174"),
  
  _175("175"),
  
  _176("176"),
  
  _177("177"),
  
  _178("178"),
  
  _179("179"),
  
  _18("18"),
  
  _180("180"),
  
  _181("181"),
  
  _182("182"),
  
  _183("183"),
  
  _184("184"),
  
  _185("185"),
  
  _186("186"),
  
  _187("187"),
  
  _188("188"),
  
  _189("189"),
  
  _19("19"),
  
  _190("190"),
  
  _191("191"),
  
  _192("192"),
  
  _193("193"),
  
  _194("194"),
  
  _195("195"),
  
  _196("196"),
  
  _197("197"),
  
  _198("198"),
  
  _2("2"),
  
  _20("20"),
  
  _200("200"),
  
  _205("205"),
  
  _206("206"),
  
  _207("207"),
  
  _21("21"),
  
  _210("210"),
  
  _211("211"),
  
  _212("212"),
  
  _213("213"),
  
  _214("214"),
  
  _215("215"),
  
  _216("216"),
  
  _217("217"),
  
  _22("22"),
  
  _220("220"),
  
  _221("221"),
  
  _222("222"),
  
  _223("223"),
  
  _23("23"),
  
  _24("24"),
  
  _25("25"),
  
  _26("26"),
  
  _27("27"),
  
  _3("3"),
  
  _4("4"),
  
  _40("40"),
  
  _41("41"),
  
  _42("42"),
  
  _43("43"),
  
  _44("44"),
  
  _45("45"),
  
  _46("46"),
  
  _47("47"),
  
  _48("48"),
  
  _49("49"),
  
  _5("5"),
  
  _50("50"),
  
  _51("51"),
  
  _52("52"),
  
  _53("53"),
  
  _54("54"),
  
  _55("55"),
  
  _56("56"),
  
  _57("57"),
  
  _58("58"),
  
  _59("59"),
  
  _6("6"),
  
  _60("60"),
  
  _61("61"),
  
  _62("62"),
  
  _63("63"),
  
  _64("64"),
  
  _65("65"),
  
  _66("66"),
  
  _67("67"),
  
  _68("68"),
  
  _69("69"),
  
  _7("7"),
  
  _70("70"),
  
  _700("700"),
  
  _701("701"),
  
  _702("702"),
  
  _703("703"),
  
  _704("704"),
  
  _705("705"),
  
  _706("706"),
  
  _707("707"),
  
  _708("708"),
  
  _709("709"),
  
  _71("71"),
  
  _710("710"),
  
  _711("711"),
  
  _712("712"),
  
  _713("713"),
  
  _714("714"),
  
  _715("715"),
  
  _716("716"),
  
  _717("717"),
  
  _718("718"),
  
  _719("719"),
  
  _72("72"),
  
  _720("720"),
  
  _721("721"),
  
  _722("722"),
  
  _723("723"),
  
  _724("724"),
  
  _725("725"),
  
  _726("726"),
  
  _727("727"),
  
  _728("728"),
  
  _729("729"),
  
  _73("73"),
  
  _730("730"),
  
  _731("731"),
  
  _732("732"),
  
  _733("733"),
  
  _734("734"),
  
  _735("735"),
  
  _736("736"),
  
  _737("737"),
  
  _738("738"),
  
  _739("739"),
  
  _74("74"),
  
  _740("740"),
  
  _741("741"),
  
  _742("742"),
  
  _743("743"),
  
  _744("744"),
  
  _745("745"),
  
  _746("746"),
  
  _747("747"),
  
  _748("748"),
  
  _749("749"),
  
  _75("75"),
  
  _750("750"),
  
  _751("751"),
  
  _752("752"),
  
  _753("753"),
  
  _754("754"),
  
  _755("755"),
  
  _756("756"),
  
  _757("757"),
  
  _758("758"),
  
  _759("759"),
  
  _76("76"),
  
  _760("760"),
  
  _761("761"),
  
  _762("762"),
  
  _763("763"),
  
  _764("764"),
  
  _765("765"),
  
  _766("766"),
  
  _767("767"),
  
  _768("768"),
  
  _769("769"),
  
  _77("77"),
  
  _770("770"),
  
  _771("771"),
  
  _772("772"),
  
  _773("773"),
  
  _774("774"),
  
  _775("775"),
  
  _776("776"),
  
  _777("777"),
  
  _778("778"),
  
  _779("779"),
  
  _78("78"),
  
  _780("780"),
  
  _781("781"),
  
  _782("782"),
  
  _783("783"),
  
  _784("784"),
  
  _785("785"),
  
  _786("786"),
  
  _787("787"),
  
  _788("788"),
  
  _789("789"),
  
  _79("79"),
  
  _790("790"),
  
  _791("791"),
  
  _792("792"),
  
  _793("793"),
  
  _794("794"),
  
  _795("795"),
  
  _796("796"),
  
  _797("797"),
  
  _798("798"),
  
  _799("799"),
  
  _8("8"),
  
  _80("80"),
  
  _800("800"),
  
  _801("801"),
  
  _802("802"),
  
  _803("803"),
  
  _804("804"),
  
  _805("805"),
  
  _81("81"),
  
  _82("82"),
  
  _83("83"),
  
  _84("84"),
  
  _85("85"),
  
  _86("86"),
  
  _87("87"),
  
  _88("88"),
  
  _89("89"),
  
  _9("9"),
  
  _90("90"),
  
  _91("91"),
  
  _92("92"),
  
  _93("93"),
  
  _94("94"),
  
  _97("97"),
  
  _98("98"),
  
  _99("99"),
  
  A("A"),
  
  A4("A4"),
  
  B("B"),
  
  C("C"),
  
  D("D"),
  
  E("E"),
  
  F("F"),
  
  F18("F18"),
  
  FC("FC"),
  
  FM("FM"),
  
  FS("FS"),
  
  G("G"),
  
  H("H"),
  
  I("I"),
  
  J("J"),
  
  K("K"),
  
  L("L"),
  
  M("M"),
  
  N("N"),
  
  O("O"),
  
  P("P"),
  
  RC("RC"),
  
  RN("RN"),
  
  RQ("RQ"),
  
  RS("RS"),
  
  RZ("RZ"),
  
  SA("SA"),
  
  SCR("SCR"),
  
  SIR("SIR"),
  
  SMA("SMA"),
  
  TLQ("TLQ"),
  
  U("U");

  private String value;

  EDIFACTID1225(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EDIFACTID1225 fromValue(String value) {
    for (EDIFACTID1225 b : EDIFACTID1225.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EDIFACTID1225> {
    @Override
    public void write(final JsonWriter jsonWriter, final EDIFACTID1225 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EDIFACTID1225 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EDIFACTID1225.fromValue(value);
    }
  }
}

