/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.EDIFACTID5479;
import org.openapitools.client.model.EDIFACTID9906;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * C311
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class C311 {
  public static final String SERIALIZED_NAME_RELATION01 = "Relation_01";
  @SerializedName(SERIALIZED_NAME_RELATION01)
  private EDIFACTID5479 relation01;

  public static final String SERIALIZED_NAME_GROUP_NUMBER02 = "GroupNumber_02";
  @SerializedName(SERIALIZED_NAME_GROUP_NUMBER02)
  private String groupNumber02;

  public static final String SERIALIZED_NAME_LINE_ITEM_NUMBER03 = "LineItemNumber_03";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_NUMBER03)
  private String lineItemNumber03;

  public static final String SERIALIZED_NAME_RELATION04 = "Relation_04";
  @SerializedName(SERIALIZED_NAME_RELATION04)
  private EDIFACTID5479 relation04;

  public static final String SERIALIZED_NAME_COMPANY_IDENTIFICATION05 = "CompanyIdentification_05";
  @SerializedName(SERIALIZED_NAME_COMPANY_IDENTIFICATION05)
  private EDIFACTID9906 companyIdentification05;

  public C311() {
  }

  public C311 relation01(EDIFACTID5479 relation01) {
    
    this.relation01 = relation01;
    return this;
  }

   /**
   * Get relation01
   * @return relation01
  **/
  @javax.annotation.Nullable

  public EDIFACTID5479 getRelation01() {
    return relation01;
  }


  public void setRelation01(EDIFACTID5479 relation01) {
    this.relation01 = relation01;
  }


  public C311 groupNumber02(String groupNumber02) {
    
    this.groupNumber02 = groupNumber02;
    return this;
  }

   /**
   * Get groupNumber02
   * @return groupNumber02
  **/
  @javax.annotation.Nullable

  public String getGroupNumber02() {
    return groupNumber02;
  }


  public void setGroupNumber02(String groupNumber02) {
    this.groupNumber02 = groupNumber02;
  }


  public C311 lineItemNumber03(String lineItemNumber03) {
    
    this.lineItemNumber03 = lineItemNumber03;
    return this;
  }

   /**
   * Get lineItemNumber03
   * @return lineItemNumber03
  **/
  @javax.annotation.Nullable

  public String getLineItemNumber03() {
    return lineItemNumber03;
  }


  public void setLineItemNumber03(String lineItemNumber03) {
    this.lineItemNumber03 = lineItemNumber03;
  }


  public C311 relation04(EDIFACTID5479 relation04) {
    
    this.relation04 = relation04;
    return this;
  }

   /**
   * Get relation04
   * @return relation04
  **/
  @javax.annotation.Nullable

  public EDIFACTID5479 getRelation04() {
    return relation04;
  }


  public void setRelation04(EDIFACTID5479 relation04) {
    this.relation04 = relation04;
  }


  public C311 companyIdentification05(EDIFACTID9906 companyIdentification05) {
    
    this.companyIdentification05 = companyIdentification05;
    return this;
  }

   /**
   * Get companyIdentification05
   * @return companyIdentification05
  **/
  @javax.annotation.Nullable

  public EDIFACTID9906 getCompanyIdentification05() {
    return companyIdentification05;
  }


  public void setCompanyIdentification05(EDIFACTID9906 companyIdentification05) {
    this.companyIdentification05 = companyIdentification05;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    C311 C311 = (C311) o;
    return Objects.equals(this.relation01, C311.relation01) &&
        Objects.equals(this.groupNumber02, C311.groupNumber02) &&
        Objects.equals(this.lineItemNumber03, C311.lineItemNumber03) &&
        Objects.equals(this.relation04, C311.relation04) &&
        Objects.equals(this.companyIdentification05, C311.companyIdentification05);
  }

  @Override
  public int hashCode() {
    return Objects.hash(relation01, groupNumber02, lineItemNumber03, relation04, companyIdentification05);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class C311 {\n");
    sb.append("    relation01: ").append(toIndentedString(relation01)).append("\n");
    sb.append("    groupNumber02: ").append(toIndentedString(groupNumber02)).append("\n");
    sb.append("    lineItemNumber03: ").append(toIndentedString(lineItemNumber03)).append("\n");
    sb.append("    relation04: ").append(toIndentedString(relation04)).append("\n");
    sb.append("    companyIdentification05: ").append(toIndentedString(companyIdentification05)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Relation_01");
    openapiFields.add("GroupNumber_02");
    openapiFields.add("LineItemNumber_03");
    openapiFields.add("Relation_04");
    openapiFields.add("CompanyIdentification_05");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to C311
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!C311.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in C311 is not found in the empty JSON string", C311.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!C311.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `C311` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("GroupNumber_02") != null && !jsonObj.get("GroupNumber_02").isJsonNull()) && !jsonObj.get("GroupNumber_02").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GroupNumber_02` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GroupNumber_02").toString()));
      }
      if ((jsonObj.get("LineItemNumber_03") != null && !jsonObj.get("LineItemNumber_03").isJsonNull()) && !jsonObj.get("LineItemNumber_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LineItemNumber_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LineItemNumber_03").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!C311.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'C311' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<C311> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(C311.class));

       return (TypeAdapter<T>) new TypeAdapter<C311>() {
           @Override
           public void write(JsonWriter out, C311 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public C311 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of C311 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of C311
  * @throws IOException if the JSON string is invalid with respect to C311
  */
  public static C311 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, C311.class);
  }

 /**
  * Convert an instance of C311 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

