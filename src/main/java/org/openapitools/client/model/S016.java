/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * S016
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class S016 {
  public static final String SERIALIZED_NAME_MESSAGE_SUBSET_IDENTIFICATION01 = "MessageSubsetIdentification_01";
  @SerializedName(SERIALIZED_NAME_MESSAGE_SUBSET_IDENTIFICATION01)
  private String messageSubsetIdentification01;

  public static final String SERIALIZED_NAME_MESSAGE_SUBSET_VERSION_NUMBER02 = "MessageSubsetVersionNumber_02";
  @SerializedName(SERIALIZED_NAME_MESSAGE_SUBSET_VERSION_NUMBER02)
  private String messageSubsetVersionNumber02;

  public static final String SERIALIZED_NAME_MESSAGE_SUBSET_RELEASE_NUMBER03 = "MessageSubsetReleaseNumber_03";
  @SerializedName(SERIALIZED_NAME_MESSAGE_SUBSET_RELEASE_NUMBER03)
  private String messageSubsetReleaseNumber03;

  public static final String SERIALIZED_NAME_CONTROLLING_AGENCY_CODED04 = "ControllingAgencyCoded_04";
  @SerializedName(SERIALIZED_NAME_CONTROLLING_AGENCY_CODED04)
  private String controllingAgencyCoded04;

  public S016() {
  }

  public S016 messageSubsetIdentification01(String messageSubsetIdentification01) {
    
    this.messageSubsetIdentification01 = messageSubsetIdentification01;
    return this;
  }

   /**
   * Get messageSubsetIdentification01
   * @return messageSubsetIdentification01
  **/
  @javax.annotation.Nonnull

  public String getMessageSubsetIdentification01() {
    return messageSubsetIdentification01;
  }


  public void setMessageSubsetIdentification01(String messageSubsetIdentification01) {
    this.messageSubsetIdentification01 = messageSubsetIdentification01;
  }


  public S016 messageSubsetVersionNumber02(String messageSubsetVersionNumber02) {
    
    this.messageSubsetVersionNumber02 = messageSubsetVersionNumber02;
    return this;
  }

   /**
   * Get messageSubsetVersionNumber02
   * @return messageSubsetVersionNumber02
  **/
  @javax.annotation.Nullable

  public String getMessageSubsetVersionNumber02() {
    return messageSubsetVersionNumber02;
  }


  public void setMessageSubsetVersionNumber02(String messageSubsetVersionNumber02) {
    this.messageSubsetVersionNumber02 = messageSubsetVersionNumber02;
  }


  public S016 messageSubsetReleaseNumber03(String messageSubsetReleaseNumber03) {
    
    this.messageSubsetReleaseNumber03 = messageSubsetReleaseNumber03;
    return this;
  }

   /**
   * Get messageSubsetReleaseNumber03
   * @return messageSubsetReleaseNumber03
  **/
  @javax.annotation.Nullable

  public String getMessageSubsetReleaseNumber03() {
    return messageSubsetReleaseNumber03;
  }


  public void setMessageSubsetReleaseNumber03(String messageSubsetReleaseNumber03) {
    this.messageSubsetReleaseNumber03 = messageSubsetReleaseNumber03;
  }


  public S016 controllingAgencyCoded04(String controllingAgencyCoded04) {
    
    this.controllingAgencyCoded04 = controllingAgencyCoded04;
    return this;
  }

   /**
   * Get controllingAgencyCoded04
   * @return controllingAgencyCoded04
  **/
  @javax.annotation.Nullable

  public String getControllingAgencyCoded04() {
    return controllingAgencyCoded04;
  }


  public void setControllingAgencyCoded04(String controllingAgencyCoded04) {
    this.controllingAgencyCoded04 = controllingAgencyCoded04;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    S016 S016 = (S016) o;
    return Objects.equals(this.messageSubsetIdentification01, S016.messageSubsetIdentification01) &&
        Objects.equals(this.messageSubsetVersionNumber02, S016.messageSubsetVersionNumber02) &&
        Objects.equals(this.messageSubsetReleaseNumber03, S016.messageSubsetReleaseNumber03) &&
        Objects.equals(this.controllingAgencyCoded04, S016.controllingAgencyCoded04);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageSubsetIdentification01, messageSubsetVersionNumber02, messageSubsetReleaseNumber03, controllingAgencyCoded04);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class S016 {\n");
    sb.append("    messageSubsetIdentification01: ").append(toIndentedString(messageSubsetIdentification01)).append("\n");
    sb.append("    messageSubsetVersionNumber02: ").append(toIndentedString(messageSubsetVersionNumber02)).append("\n");
    sb.append("    messageSubsetReleaseNumber03: ").append(toIndentedString(messageSubsetReleaseNumber03)).append("\n");
    sb.append("    controllingAgencyCoded04: ").append(toIndentedString(controllingAgencyCoded04)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MessageSubsetIdentification_01");
    openapiFields.add("MessageSubsetVersionNumber_02");
    openapiFields.add("MessageSubsetReleaseNumber_03");
    openapiFields.add("ControllingAgencyCoded_04");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("MessageSubsetIdentification_01");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to S016
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!S016.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in S016 is not found in the empty JSON string", S016.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!S016.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `S016` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : S016.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("MessageSubsetIdentification_01").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MessageSubsetIdentification_01` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MessageSubsetIdentification_01").toString()));
      }
      if ((jsonObj.get("MessageSubsetVersionNumber_02") != null && !jsonObj.get("MessageSubsetVersionNumber_02").isJsonNull()) && !jsonObj.get("MessageSubsetVersionNumber_02").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MessageSubsetVersionNumber_02` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MessageSubsetVersionNumber_02").toString()));
      }
      if ((jsonObj.get("MessageSubsetReleaseNumber_03") != null && !jsonObj.get("MessageSubsetReleaseNumber_03").isJsonNull()) && !jsonObj.get("MessageSubsetReleaseNumber_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MessageSubsetReleaseNumber_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MessageSubsetReleaseNumber_03").toString()));
      }
      if ((jsonObj.get("ControllingAgencyCoded_04") != null && !jsonObj.get("ControllingAgencyCoded_04").isJsonNull()) && !jsonObj.get("ControllingAgencyCoded_04").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ControllingAgencyCoded_04` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ControllingAgencyCoded_04").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!S016.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'S016' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<S016> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(S016.class));

       return (TypeAdapter<T>) new TypeAdapter<S016>() {
           @Override
           public void write(JsonWriter out, S016 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public S016 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of S016 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of S016
  * @throws IOException if the JSON string is invalid with respect to S016
  */
  public static S016 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, S016.class);
  }

 /**
  * Convert an instance of S016 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

