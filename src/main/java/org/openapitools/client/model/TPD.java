/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.C689;
import org.openapitools.client.model.EDIFACTID7037;
import org.openapitools.client.model.EDIFACTID9906;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TPD
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class TPD {
  public static final String SERIALIZED_NAME_COMPANY_IDENTIFICATION01 = "CompanyIdentification_01";
  @SerializedName(SERIALIZED_NAME_COMPANY_IDENTIFICATION01)
  private EDIFACTID9906 companyIdentification01;

  public static final String SERIALIZED_NAME_RATETARIFF_CLASS_IDENTIFICATION02 = "RatetariffClassIdentification_02";
  @SerializedName(SERIALIZED_NAME_RATETARIFF_CLASS_IDENTIFICATION02)
  private String ratetariffClassIdentification02;

  public static final String SERIALIZED_NAME_FIRST_DATE03 = "FirstDate_03";
  @SerializedName(SERIALIZED_NAME_FIRST_DATE03)
  private String firstDate03;

  public static final String SERIALIZED_NAME_TRAVELER_REFERENCE_NUMBER04 = "TravelerReferenceNumber_04";
  @SerializedName(SERIALIZED_NAME_TRAVELER_REFERENCE_NUMBER04)
  private String travelerReferenceNumber04;

  public static final String SERIALIZED_NAME_C68905 = "C689_05";
  @SerializedName(SERIALIZED_NAME_C68905)
  private C689 C689_05;

  public static final String SERIALIZED_NAME_CHARACTERISTIC_IDENTIFICATION06 = "CharacteristicIdentification_06";
  @SerializedName(SERIALIZED_NAME_CHARACTERISTIC_IDENTIFICATION06)
  private EDIFACTID7037 characteristicIdentification06;

  public static final String SERIALIZED_NAME_FREE_TEXT07 = "FreeText_07";
  @SerializedName(SERIALIZED_NAME_FREE_TEXT07)
  private String freeText07;

  public TPD() {
  }

  public TPD companyIdentification01(EDIFACTID9906 companyIdentification01) {
    
    this.companyIdentification01 = companyIdentification01;
    return this;
  }

   /**
   * Get companyIdentification01
   * @return companyIdentification01
  **/
  @javax.annotation.Nullable

  public EDIFACTID9906 getCompanyIdentification01() {
    return companyIdentification01;
  }


  public void setCompanyIdentification01(EDIFACTID9906 companyIdentification01) {
    this.companyIdentification01 = companyIdentification01;
  }


  public TPD ratetariffClassIdentification02(String ratetariffClassIdentification02) {
    
    this.ratetariffClassIdentification02 = ratetariffClassIdentification02;
    return this;
  }

   /**
   * Get ratetariffClassIdentification02
   * @return ratetariffClassIdentification02
  **/
  @javax.annotation.Nullable

  public String getRatetariffClassIdentification02() {
    return ratetariffClassIdentification02;
  }


  public void setRatetariffClassIdentification02(String ratetariffClassIdentification02) {
    this.ratetariffClassIdentification02 = ratetariffClassIdentification02;
  }


  public TPD firstDate03(String firstDate03) {
    
    this.firstDate03 = firstDate03;
    return this;
  }

   /**
   * Get firstDate03
   * @return firstDate03
  **/
  @javax.annotation.Nullable

  public String getFirstDate03() {
    return firstDate03;
  }


  public void setFirstDate03(String firstDate03) {
    this.firstDate03 = firstDate03;
  }


  public TPD travelerReferenceNumber04(String travelerReferenceNumber04) {
    
    this.travelerReferenceNumber04 = travelerReferenceNumber04;
    return this;
  }

   /**
   * Get travelerReferenceNumber04
   * @return travelerReferenceNumber04
  **/
  @javax.annotation.Nullable

  public String getTravelerReferenceNumber04() {
    return travelerReferenceNumber04;
  }


  public void setTravelerReferenceNumber04(String travelerReferenceNumber04) {
    this.travelerReferenceNumber04 = travelerReferenceNumber04;
  }


  public TPD C689_05(C689 C689_05) {
    
    this.C689_05 = C689_05;
    return this;
  }

   /**
   * Get C689_05
   * @return C689_05
  **/
  @javax.annotation.Nullable

  public C689 getC68905() {
    return C689_05;
  }


  public void setC68905(C689 C689_05) {
    this.C689_05 = C689_05;
  }


  public TPD characteristicIdentification06(EDIFACTID7037 characteristicIdentification06) {
    
    this.characteristicIdentification06 = characteristicIdentification06;
    return this;
  }

   /**
   * Get characteristicIdentification06
   * @return characteristicIdentification06
  **/
  @javax.annotation.Nullable

  public EDIFACTID7037 getCharacteristicIdentification06() {
    return characteristicIdentification06;
  }


  public void setCharacteristicIdentification06(EDIFACTID7037 characteristicIdentification06) {
    this.characteristicIdentification06 = characteristicIdentification06;
  }


  public TPD freeText07(String freeText07) {
    
    this.freeText07 = freeText07;
    return this;
  }

   /**
   * Get freeText07
   * @return freeText07
  **/
  @javax.annotation.Nullable

  public String getFreeText07() {
    return freeText07;
  }


  public void setFreeText07(String freeText07) {
    this.freeText07 = freeText07;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TPD TPD = (TPD) o;
    return Objects.equals(this.companyIdentification01, TPD.companyIdentification01) &&
        Objects.equals(this.ratetariffClassIdentification02, TPD.ratetariffClassIdentification02) &&
        Objects.equals(this.firstDate03, TPD.firstDate03) &&
        Objects.equals(this.travelerReferenceNumber04, TPD.travelerReferenceNumber04) &&
        Objects.equals(this.C689_05, TPD.C689_05) &&
        Objects.equals(this.characteristicIdentification06, TPD.characteristicIdentification06) &&
        Objects.equals(this.freeText07, TPD.freeText07);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyIdentification01, ratetariffClassIdentification02, firstDate03, travelerReferenceNumber04, C689_05, characteristicIdentification06, freeText07);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TPD {\n");
    sb.append("    companyIdentification01: ").append(toIndentedString(companyIdentification01)).append("\n");
    sb.append("    ratetariffClassIdentification02: ").append(toIndentedString(ratetariffClassIdentification02)).append("\n");
    sb.append("    firstDate03: ").append(toIndentedString(firstDate03)).append("\n");
    sb.append("    travelerReferenceNumber04: ").append(toIndentedString(travelerReferenceNumber04)).append("\n");
    sb.append("    C689_05: ").append(toIndentedString(C689_05)).append("\n");
    sb.append("    characteristicIdentification06: ").append(toIndentedString(characteristicIdentification06)).append("\n");
    sb.append("    freeText07: ").append(toIndentedString(freeText07)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CompanyIdentification_01");
    openapiFields.add("RatetariffClassIdentification_02");
    openapiFields.add("FirstDate_03");
    openapiFields.add("TravelerReferenceNumber_04");
    openapiFields.add("C689_05");
    openapiFields.add("CharacteristicIdentification_06");
    openapiFields.add("FreeText_07");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TPD
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TPD.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TPD is not found in the empty JSON string", TPD.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TPD.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TPD` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("RatetariffClassIdentification_02") != null && !jsonObj.get("RatetariffClassIdentification_02").isJsonNull()) && !jsonObj.get("RatetariffClassIdentification_02").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RatetariffClassIdentification_02` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RatetariffClassIdentification_02").toString()));
      }
      if ((jsonObj.get("FirstDate_03") != null && !jsonObj.get("FirstDate_03").isJsonNull()) && !jsonObj.get("FirstDate_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FirstDate_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FirstDate_03").toString()));
      }
      if ((jsonObj.get("TravelerReferenceNumber_04") != null && !jsonObj.get("TravelerReferenceNumber_04").isJsonNull()) && !jsonObj.get("TravelerReferenceNumber_04").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TravelerReferenceNumber_04` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TravelerReferenceNumber_04").toString()));
      }
      // validate the optional field `C689_05`
      if (jsonObj.get("C689_05") != null && !jsonObj.get("C689_05").isJsonNull()) {
        C689.validateJsonObject(jsonObj.getAsJsonObject("C689_05"));
      }
      if ((jsonObj.get("FreeText_07") != null && !jsonObj.get("FreeText_07").isJsonNull()) && !jsonObj.get("FreeText_07").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FreeText_07` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FreeText_07").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TPD.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TPD' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TPD> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TPD.class));

       return (TypeAdapter<T>) new TypeAdapter<TPD>() {
           @Override
           public void write(JsonWriter out, TPD value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TPD read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TPD given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TPD
  * @throws IOException if the JSON string is invalid with respect to TPD
  */
  public static TPD fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TPD.class);
  }

 /**
  * Convert an instance of TPD to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

