/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets EDIFACT_ID_9960
 */
@JsonAdapter(EDIFACTID9960.Adapter.class)
public enum EDIFACTID9960 {
  
  _356("356"),
  
  _357("357"),
  
  _358("358"),
  
  _359("359"),
  
  _360("360"),
  
  _361("361"),
  
  _362("362"),
  
  _363("363"),
  
  _364("364"),
  
  _365("365"),
  
  _366("366"),
  
  _367("367"),
  
  _368("368"),
  
  _369("369"),
  
  _370("370"),
  
  _371("371"),
  
  _372("372"),
  
  _373("373"),
  
  _374("374"),
  
  _375("375"),
  
  _376("376"),
  
  _377("377"),
  
  _378("378"),
  
  _379("379"),
  
  _380("380"),
  
  _381("381"),
  
  _382("382"),
  
  _383("383"),
  
  _384("384"),
  
  _385("385"),
  
  _386("386"),
  
  _387("387"),
  
  _388("388"),
  
  _389("389"),
  
  _390("390"),
  
  _391("391"),
  
  _392("392"),
  
  _393("393"),
  
  _394("394"),
  
  _395("395"),
  
  _396("396"),
  
  _397("397"),
  
  _398("398"),
  
  _399("399"),
  
  _400("400"),
  
  _401("401"),
  
  _402("402"),
  
  _403("403"),
  
  _404("404"),
  
  _405("405"),
  
  _406("406"),
  
  _407("407"),
  
  _408("408"),
  
  _409("409"),
  
  _410("410"),
  
  _411("411"),
  
  _412("412"),
  
  _413("413"),
  
  _414("414"),
  
  _415("415"),
  
  _416("416"),
  
  _417("417");

  private String value;

  EDIFACTID9960(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EDIFACTID9960 fromValue(String value) {
    for (EDIFACTID9960 b : EDIFACTID9960.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EDIFACTID9960> {
    @Override
    public void write(final JsonWriter jsonWriter, final EDIFACTID9960 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EDIFACTID9960 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EDIFACTID9960.fromValue(value);
    }
  }
}

