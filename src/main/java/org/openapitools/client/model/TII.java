/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.C309;
import org.openapitools.client.model.C310;
import org.openapitools.client.model.EDIFACTID8335;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TII
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class TII {
  public static final String SERIALIZED_NAME_ITEM_NUMBER01 = "ItemNumber_01";
  @SerializedName(SERIALIZED_NAME_ITEM_NUMBER01)
  private String itemNumber01;

  public static final String SERIALIZED_NAME_NUMERIC_REFERENCE_IDENTIFICATION02 = "NumericReferenceIdentification_02";
  @SerializedName(SERIALIZED_NAME_NUMERIC_REFERENCE_IDENTIFICATION02)
  private String numericReferenceIdentification02;

  public static final String SERIALIZED_NAME_C31003 = "C310_03";
  @SerializedName(SERIALIZED_NAME_C31003)
  private C310 C310_03;

  public static final String SERIALIZED_NAME_MOVEMENT_TYPE04 = "MovementType_04";
  @SerializedName(SERIALIZED_NAME_MOVEMENT_TYPE04)
  private EDIFACTID8335 movementType04;

  public static final String SERIALIZED_NAME_CABIN_COMPARTMENT_DESIGNATOR05 = "CabinCompartmentDesignator_05";
  @SerializedName(SERIALIZED_NAME_CABIN_COMPARTMENT_DESIGNATOR05)
  private String cabinCompartmentDesignator05;

  public static final String SERIALIZED_NAME_C30906 = "C309_06";
  @SerializedName(SERIALIZED_NAME_C30906)
  private C309 C309_06;

  public static final String SERIALIZED_NAME_PLACELOCATION_IDENTIFICATION07 = "PlacelocationIdentification_07";
  @SerializedName(SERIALIZED_NAME_PLACELOCATION_IDENTIFICATION07)
  private List<String> placelocationIdentification07;

  public TII() {
  }

  public TII itemNumber01(String itemNumber01) {
    
    this.itemNumber01 = itemNumber01;
    return this;
  }

   /**
   * Get itemNumber01
   * @return itemNumber01
  **/
  @javax.annotation.Nullable

  public String getItemNumber01() {
    return itemNumber01;
  }


  public void setItemNumber01(String itemNumber01) {
    this.itemNumber01 = itemNumber01;
  }


  public TII numericReferenceIdentification02(String numericReferenceIdentification02) {
    
    this.numericReferenceIdentification02 = numericReferenceIdentification02;
    return this;
  }

   /**
   * Get numericReferenceIdentification02
   * @return numericReferenceIdentification02
  **/
  @javax.annotation.Nullable

  public String getNumericReferenceIdentification02() {
    return numericReferenceIdentification02;
  }


  public void setNumericReferenceIdentification02(String numericReferenceIdentification02) {
    this.numericReferenceIdentification02 = numericReferenceIdentification02;
  }


  public TII C310_03(C310 C310_03) {
    
    this.C310_03 = C310_03;
    return this;
  }

   /**
   * Get C310_03
   * @return C310_03
  **/
  @javax.annotation.Nullable

  public C310 getC31003() {
    return C310_03;
  }


  public void setC31003(C310 C310_03) {
    this.C310_03 = C310_03;
  }


  public TII movementType04(EDIFACTID8335 movementType04) {
    
    this.movementType04 = movementType04;
    return this;
  }

   /**
   * Get movementType04
   * @return movementType04
  **/
  @javax.annotation.Nullable

  public EDIFACTID8335 getMovementType04() {
    return movementType04;
  }


  public void setMovementType04(EDIFACTID8335 movementType04) {
    this.movementType04 = movementType04;
  }


  public TII cabinCompartmentDesignator05(String cabinCompartmentDesignator05) {
    
    this.cabinCompartmentDesignator05 = cabinCompartmentDesignator05;
    return this;
  }

   /**
   * Get cabinCompartmentDesignator05
   * @return cabinCompartmentDesignator05
  **/
  @javax.annotation.Nullable

  public String getCabinCompartmentDesignator05() {
    return cabinCompartmentDesignator05;
  }


  public void setCabinCompartmentDesignator05(String cabinCompartmentDesignator05) {
    this.cabinCompartmentDesignator05 = cabinCompartmentDesignator05;
  }


  public TII C309_06(C309 C309_06) {
    
    this.C309_06 = C309_06;
    return this;
  }

   /**
   * Get C309_06
   * @return C309_06
  **/
  @javax.annotation.Nullable

  public C309 getC30906() {
    return C309_06;
  }


  public void setC30906(C309 C309_06) {
    this.C309_06 = C309_06;
  }


  public TII placelocationIdentification07(List<String> placelocationIdentification07) {
    
    this.placelocationIdentification07 = placelocationIdentification07;
    return this;
  }

  public TII addPlacelocationIdentification07Item(String placelocationIdentification07Item) {
    if (this.placelocationIdentification07 == null) {
      this.placelocationIdentification07 = new ArrayList<>();
    }
    this.placelocationIdentification07.add(placelocationIdentification07Item);
    return this;
  }

   /**
   * Get placelocationIdentification07
   * @return placelocationIdentification07
  **/
  @javax.annotation.Nullable

  public List<String> getPlacelocationIdentification07() {
    return placelocationIdentification07;
  }


  public void setPlacelocationIdentification07(List<String> placelocationIdentification07) {
    this.placelocationIdentification07 = placelocationIdentification07;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TII TII = (TII) o;
    return Objects.equals(this.itemNumber01, TII.itemNumber01) &&
        Objects.equals(this.numericReferenceIdentification02, TII.numericReferenceIdentification02) &&
        Objects.equals(this.C310_03, TII.C310_03) &&
        Objects.equals(this.movementType04, TII.movementType04) &&
        Objects.equals(this.cabinCompartmentDesignator05, TII.cabinCompartmentDesignator05) &&
        Objects.equals(this.C309_06, TII.C309_06) &&
        Objects.equals(this.placelocationIdentification07, TII.placelocationIdentification07);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemNumber01, numericReferenceIdentification02, C310_03, movementType04, cabinCompartmentDesignator05, C309_06, placelocationIdentification07);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TII {\n");
    sb.append("    itemNumber01: ").append(toIndentedString(itemNumber01)).append("\n");
    sb.append("    numericReferenceIdentification02: ").append(toIndentedString(numericReferenceIdentification02)).append("\n");
    sb.append("    C310_03: ").append(toIndentedString(C310_03)).append("\n");
    sb.append("    movementType04: ").append(toIndentedString(movementType04)).append("\n");
    sb.append("    cabinCompartmentDesignator05: ").append(toIndentedString(cabinCompartmentDesignator05)).append("\n");
    sb.append("    C309_06: ").append(toIndentedString(C309_06)).append("\n");
    sb.append("    placelocationIdentification07: ").append(toIndentedString(placelocationIdentification07)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ItemNumber_01");
    openapiFields.add("NumericReferenceIdentification_02");
    openapiFields.add("C310_03");
    openapiFields.add("MovementType_04");
    openapiFields.add("CabinCompartmentDesignator_05");
    openapiFields.add("C309_06");
    openapiFields.add("PlacelocationIdentification_07");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TII
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TII.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TII is not found in the empty JSON string", TII.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TII.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TII` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("ItemNumber_01") != null && !jsonObj.get("ItemNumber_01").isJsonNull()) && !jsonObj.get("ItemNumber_01").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ItemNumber_01` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ItemNumber_01").toString()));
      }
      if ((jsonObj.get("NumericReferenceIdentification_02") != null && !jsonObj.get("NumericReferenceIdentification_02").isJsonNull()) && !jsonObj.get("NumericReferenceIdentification_02").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NumericReferenceIdentification_02` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NumericReferenceIdentification_02").toString()));
      }
      // validate the optional field `C310_03`
      if (jsonObj.get("C310_03") != null && !jsonObj.get("C310_03").isJsonNull()) {
        C310.validateJsonObject(jsonObj.getAsJsonObject("C310_03"));
      }
      if ((jsonObj.get("CabinCompartmentDesignator_05") != null && !jsonObj.get("CabinCompartmentDesignator_05").isJsonNull()) && !jsonObj.get("CabinCompartmentDesignator_05").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CabinCompartmentDesignator_05` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CabinCompartmentDesignator_05").toString()));
      }
      // validate the optional field `C309_06`
      if (jsonObj.get("C309_06") != null && !jsonObj.get("C309_06").isJsonNull()) {
        C309.validateJsonObject(jsonObj.getAsJsonObject("C309_06"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("PlacelocationIdentification_07") != null && !jsonObj.get("PlacelocationIdentification_07").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `PlacelocationIdentification_07` to be an array in the JSON string but got `%s`", jsonObj.get("PlacelocationIdentification_07").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TII.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TII' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TII> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TII.class));

       return (TypeAdapter<T>) new TypeAdapter<TII>() {
           @Override
           public void write(JsonWriter out, TII value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TII read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TII given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TII
  * @throws IOException if the JSON string is invalid with respect to TII
  */
  public static TII fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TII.class);
  }

 /**
  * Convert an instance of TII to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

