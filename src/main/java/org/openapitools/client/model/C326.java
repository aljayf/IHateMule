/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.EDIFACTID4405;
import org.openapitools.client.model.EDIFACTID7164;
import org.openapitools.client.model.EDIFACTID9906;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * C326
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class C326 {
  public static final String SERIALIZED_NAME_COMPANY_IDENTIFICATION01 = "CompanyIdentification_01";
  @SerializedName(SERIALIZED_NAME_COMPANY_IDENTIFICATION01)
  private EDIFACTID9906 companyIdentification01;

  public static final String SERIALIZED_NAME_FREQUENT_TRAVELER_IDENTIFICATION_CODE02 = "FrequentTravelerIdentificationCode_02";
  @SerializedName(SERIALIZED_NAME_FREQUENT_TRAVELER_IDENTIFICATION_CODE02)
  private String frequentTravelerIdentificationCode02;

  public static final String SERIALIZED_NAME_TRAVELER_REFERENCE_NUMBER03 = "TravelerReferenceNumber_03";
  @SerializedName(SERIALIZED_NAME_TRAVELER_REFERENCE_NUMBER03)
  private String travelerReferenceNumber03;

  public static final String SERIALIZED_NAME_STATUS04 = "Status_04";
  @SerializedName(SERIALIZED_NAME_STATUS04)
  private EDIFACTID4405 status04;

  public static final String SERIALIZED_NAME_MEMBERSHIP_LEVEL05 = "MembershipLevel_05";
  @SerializedName(SERIALIZED_NAME_MEMBERSHIP_LEVEL05)
  private String membershipLevel05;

  public static final String SERIALIZED_NAME_HIERARCHICAL_I_D_NUMBER06 = "HierarchicalIDNumber_06";
  @SerializedName(SERIALIZED_NAME_HIERARCHICAL_I_D_NUMBER06)
  private EDIFACTID7164 hierarchicalIDNumber06;

  public static final String SERIALIZED_NAME_ITEM_DESCRIPTION07 = "ItemDescription_07";
  @SerializedName(SERIALIZED_NAME_ITEM_DESCRIPTION07)
  private String itemDescription07;

  public static final String SERIALIZED_NAME_COMPANY_IDENTIFICATION08 = "CompanyIdentification_08";
  @SerializedName(SERIALIZED_NAME_COMPANY_IDENTIFICATION08)
  private EDIFACTID9906 companyIdentification08;

  public static final String SERIALIZED_NAME_PASSENGER_PRIORITY_VALUE09 = "PassengerPriorityValue_09";
  @SerializedName(SERIALIZED_NAME_PASSENGER_PRIORITY_VALUE09)
  private String passengerPriorityValue09;

  public C326() {
  }

  public C326 companyIdentification01(EDIFACTID9906 companyIdentification01) {
    
    this.companyIdentification01 = companyIdentification01;
    return this;
  }

   /**
   * Get companyIdentification01
   * @return companyIdentification01
  **/
  @javax.annotation.Nonnull

  public EDIFACTID9906 getCompanyIdentification01() {
    return companyIdentification01;
  }


  public void setCompanyIdentification01(EDIFACTID9906 companyIdentification01) {
    this.companyIdentification01 = companyIdentification01;
  }


  public C326 frequentTravelerIdentificationCode02(String frequentTravelerIdentificationCode02) {
    
    this.frequentTravelerIdentificationCode02 = frequentTravelerIdentificationCode02;
    return this;
  }

   /**
   * Get frequentTravelerIdentificationCode02
   * @return frequentTravelerIdentificationCode02
  **/
  @javax.annotation.Nonnull

  public String getFrequentTravelerIdentificationCode02() {
    return frequentTravelerIdentificationCode02;
  }


  public void setFrequentTravelerIdentificationCode02(String frequentTravelerIdentificationCode02) {
    this.frequentTravelerIdentificationCode02 = frequentTravelerIdentificationCode02;
  }


  public C326 travelerReferenceNumber03(String travelerReferenceNumber03) {
    
    this.travelerReferenceNumber03 = travelerReferenceNumber03;
    return this;
  }

   /**
   * Get travelerReferenceNumber03
   * @return travelerReferenceNumber03
  **/
  @javax.annotation.Nullable

  public String getTravelerReferenceNumber03() {
    return travelerReferenceNumber03;
  }


  public void setTravelerReferenceNumber03(String travelerReferenceNumber03) {
    this.travelerReferenceNumber03 = travelerReferenceNumber03;
  }


  public C326 status04(EDIFACTID4405 status04) {
    
    this.status04 = status04;
    return this;
  }

   /**
   * Get status04
   * @return status04
  **/
  @javax.annotation.Nullable

  public EDIFACTID4405 getStatus04() {
    return status04;
  }


  public void setStatus04(EDIFACTID4405 status04) {
    this.status04 = status04;
  }


  public C326 membershipLevel05(String membershipLevel05) {
    
    this.membershipLevel05 = membershipLevel05;
    return this;
  }

   /**
   * Get membershipLevel05
   * @return membershipLevel05
  **/
  @javax.annotation.Nullable

  public String getMembershipLevel05() {
    return membershipLevel05;
  }


  public void setMembershipLevel05(String membershipLevel05) {
    this.membershipLevel05 = membershipLevel05;
  }


  public C326 hierarchicalIDNumber06(EDIFACTID7164 hierarchicalIDNumber06) {
    
    this.hierarchicalIDNumber06 = hierarchicalIDNumber06;
    return this;
  }

   /**
   * Get hierarchicalIDNumber06
   * @return hierarchicalIDNumber06
  **/
  @javax.annotation.Nullable

  public EDIFACTID7164 getHierarchicalIDNumber06() {
    return hierarchicalIDNumber06;
  }


  public void setHierarchicalIDNumber06(EDIFACTID7164 hierarchicalIDNumber06) {
    this.hierarchicalIDNumber06 = hierarchicalIDNumber06;
  }


  public C326 itemDescription07(String itemDescription07) {
    
    this.itemDescription07 = itemDescription07;
    return this;
  }

   /**
   * Get itemDescription07
   * @return itemDescription07
  **/
  @javax.annotation.Nullable

  public String getItemDescription07() {
    return itemDescription07;
  }


  public void setItemDescription07(String itemDescription07) {
    this.itemDescription07 = itemDescription07;
  }


  public C326 companyIdentification08(EDIFACTID9906 companyIdentification08) {
    
    this.companyIdentification08 = companyIdentification08;
    return this;
  }

   /**
   * Get companyIdentification08
   * @return companyIdentification08
  **/
  @javax.annotation.Nullable

  public EDIFACTID9906 getCompanyIdentification08() {
    return companyIdentification08;
  }


  public void setCompanyIdentification08(EDIFACTID9906 companyIdentification08) {
    this.companyIdentification08 = companyIdentification08;
  }


  public C326 passengerPriorityValue09(String passengerPriorityValue09) {
    
    this.passengerPriorityValue09 = passengerPriorityValue09;
    return this;
  }

   /**
   * Get passengerPriorityValue09
   * @return passengerPriorityValue09
  **/
  @javax.annotation.Nullable

  public String getPassengerPriorityValue09() {
    return passengerPriorityValue09;
  }


  public void setPassengerPriorityValue09(String passengerPriorityValue09) {
    this.passengerPriorityValue09 = passengerPriorityValue09;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    C326 C326 = (C326) o;
    return Objects.equals(this.companyIdentification01, C326.companyIdentification01) &&
        Objects.equals(this.frequentTravelerIdentificationCode02, C326.frequentTravelerIdentificationCode02) &&
        Objects.equals(this.travelerReferenceNumber03, C326.travelerReferenceNumber03) &&
        Objects.equals(this.status04, C326.status04) &&
        Objects.equals(this.membershipLevel05, C326.membershipLevel05) &&
        Objects.equals(this.hierarchicalIDNumber06, C326.hierarchicalIDNumber06) &&
        Objects.equals(this.itemDescription07, C326.itemDescription07) &&
        Objects.equals(this.companyIdentification08, C326.companyIdentification08) &&
        Objects.equals(this.passengerPriorityValue09, C326.passengerPriorityValue09);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyIdentification01, frequentTravelerIdentificationCode02, travelerReferenceNumber03, status04, membershipLevel05, hierarchicalIDNumber06, itemDescription07, companyIdentification08, passengerPriorityValue09);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class C326 {\n");
    sb.append("    companyIdentification01: ").append(toIndentedString(companyIdentification01)).append("\n");
    sb.append("    frequentTravelerIdentificationCode02: ").append(toIndentedString(frequentTravelerIdentificationCode02)).append("\n");
    sb.append("    travelerReferenceNumber03: ").append(toIndentedString(travelerReferenceNumber03)).append("\n");
    sb.append("    status04: ").append(toIndentedString(status04)).append("\n");
    sb.append("    membershipLevel05: ").append(toIndentedString(membershipLevel05)).append("\n");
    sb.append("    hierarchicalIDNumber06: ").append(toIndentedString(hierarchicalIDNumber06)).append("\n");
    sb.append("    itemDescription07: ").append(toIndentedString(itemDescription07)).append("\n");
    sb.append("    companyIdentification08: ").append(toIndentedString(companyIdentification08)).append("\n");
    sb.append("    passengerPriorityValue09: ").append(toIndentedString(passengerPriorityValue09)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CompanyIdentification_01");
    openapiFields.add("FrequentTravelerIdentificationCode_02");
    openapiFields.add("TravelerReferenceNumber_03");
    openapiFields.add("Status_04");
    openapiFields.add("MembershipLevel_05");
    openapiFields.add("HierarchicalIDNumber_06");
    openapiFields.add("ItemDescription_07");
    openapiFields.add("CompanyIdentification_08");
    openapiFields.add("PassengerPriorityValue_09");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CompanyIdentification_01");
    openapiRequiredFields.add("FrequentTravelerIdentificationCode_02");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to C326
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!C326.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in C326 is not found in the empty JSON string", C326.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!C326.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `C326` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : C326.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("FrequentTravelerIdentificationCode_02").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FrequentTravelerIdentificationCode_02` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FrequentTravelerIdentificationCode_02").toString()));
      }
      if ((jsonObj.get("TravelerReferenceNumber_03") != null && !jsonObj.get("TravelerReferenceNumber_03").isJsonNull()) && !jsonObj.get("TravelerReferenceNumber_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TravelerReferenceNumber_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TravelerReferenceNumber_03").toString()));
      }
      if ((jsonObj.get("MembershipLevel_05") != null && !jsonObj.get("MembershipLevel_05").isJsonNull()) && !jsonObj.get("MembershipLevel_05").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MembershipLevel_05` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MembershipLevel_05").toString()));
      }
      if ((jsonObj.get("ItemDescription_07") != null && !jsonObj.get("ItemDescription_07").isJsonNull()) && !jsonObj.get("ItemDescription_07").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ItemDescription_07` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ItemDescription_07").toString()));
      }
      if ((jsonObj.get("PassengerPriorityValue_09") != null && !jsonObj.get("PassengerPriorityValue_09").isJsonNull()) && !jsonObj.get("PassengerPriorityValue_09").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PassengerPriorityValue_09` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PassengerPriorityValue_09").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!C326.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'C326' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<C326> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(C326.class));

       return (TypeAdapter<T>) new TypeAdapter<C326>() {
           @Override
           public void write(JsonWriter out, C326 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public C326 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of C326 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of C326
  * @throws IOException if the JSON string is invalid with respect to C326
  */
  public static C326 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, C326.class);
  }

 /**
  * Convert an instance of C326 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

