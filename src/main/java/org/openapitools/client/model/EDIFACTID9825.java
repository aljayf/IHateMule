/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets EDIFACT_ID_9825
 */
@JsonAdapter(EDIFACTID9825.Adapter.class)
public enum EDIFACTID9825 {
  
  _1("1"),
  
  _10("10"),
  
  _11("11"),
  
  _12("12"),
  
  _13("13"),
  
  _14("14"),
  
  _15("15"),
  
  _16("16"),
  
  _17("17"),
  
  _18("18"),
  
  _19("19"),
  
  _1A("1A"),
  
  _1B("1B"),
  
  _1C("1C"),
  
  _1D("1D"),
  
  _1M("1M"),
  
  _1W("1W"),
  
  _2("2"),
  
  _20("20"),
  
  _21("21"),
  
  _22("22"),
  
  _23("23"),
  
  _24("24"),
  
  _25("25"),
  
  _26("26"),
  
  _27("27"),
  
  _28("28"),
  
  _3("3"),
  
  _3A("3A"),
  
  _3B("3B"),
  
  _4("4"),
  
  _5("5"),
  
  _6("6"),
  
  _6A("6A"),
  
  _6B("6B"),
  
  _7("7"),
  
  _700("700"),
  
  _701("701"),
  
  _702("702"),
  
  _7A("7A"),
  
  _7B("7B"),
  
  _8("8"),
  
  _9("9"),
  
  A("A"),
  
  AA("AA"),
  
  AB("AB"),
  
  AC("AC"),
  
  AG("AG"),
  
  AJ("AJ"),
  
  AL("AL"),
  
  AM("AM"),
  
  AR("AR"),
  
  AS("AS"),
  
  AT("AT"),
  
  AU("AU"),
  
  AV("AV"),
  
  AW("AW"),
  
  B("B"),
  
  BA("BA"),
  
  BK("BK"),
  
  C("C"),
  
  CC("CC"),
  
  CH("CH"),
  
  CL("CL"),
  
  CS("CS"),
  
  D("D"),
  
  DE("DE"),
  
  E("E"),
  
  EA("EA"),
  
  EC("EC"),
  
  EK("EK"),
  
  EX("EX"),
  
  F("F"),
  
  FC("FC"),
  
  G("G"),
  
  GF("GF"),
  
  GN("GN"),
  
  GR("GR"),
  
  H("H"),
  
  I("I"),
  
  IA("IA"),
  
  IE("IE"),
  
  J("J"),
  
  K("K"),
  
  KA("KA"),
  
  KN("KN"),
  
  L("L"),
  
  LA("LA"),
  
  LG("LG"),
  
  LH("LH"),
  
  LS("LS"),
  
  M("M"),
  
  MA("MA"),
  
  N("N"),
  
  O("O"),
  
  OW("OW"),
  
  PC("PC"),
  
  Q("Q"),
  
  RS("RS"),
  
  S("S"),
  
  SO("SO"),
  
  ST("ST"),
  
  T("T"),
  
  TA("TA"),
  
  U("U"),
  
  UP("UP"),
  
  V("V"),
  
  W("W"),
  
  WA("WA"),
  
  X("X"),
  
  Z("Z");

  private String value;

  EDIFACTID9825(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EDIFACTID9825 fromValue(String value) {
    for (EDIFACTID9825 b : EDIFACTID9825.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EDIFACTID9825> {
    @Override
    public void write(final JsonWriter jsonWriter, final EDIFACTID9825 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EDIFACTID9825 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EDIFACTID9825.fromValue(value);
    }
  }
}

