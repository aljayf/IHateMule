/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.C306;
import org.openapitools.client.model.C310;
import org.openapitools.client.model.C664;
import org.openapitools.client.model.C665;
import org.openapitools.client.model.C666;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PTK
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class PTK {
  public static final String SERIALIZED_NAME_C66401 = "C664_01";
  @SerializedName(SERIALIZED_NAME_C66401)
  private C664 C664_01;

  public static final String SERIALIZED_NAME_PRICETARIFF_TYPE02 = "PricetariffType_02";
  @SerializedName(SERIALIZED_NAME_PRICETARIFF_TYPE02)
  private String pricetariffType02;

  public static final String SERIALIZED_NAME_C31003 = "C310_03";
  @SerializedName(SERIALIZED_NAME_C31003)
  private C310 C310_03;

  public static final String SERIALIZED_NAME_C30604 = "C306_04";
  @SerializedName(SERIALIZED_NAME_C30604)
  private C306 C306_04;

  public static final String SERIALIZED_NAME_C66505 = "C665_05";
  @SerializedName(SERIALIZED_NAME_C66505)
  private C665 C665_05;

  public static final String SERIALIZED_NAME_C66606 = "C666_06";
  @SerializedName(SERIALIZED_NAME_C66606)
  private C666 C666_06;

  public static final String SERIALIZED_NAME_C66607 = "C666_07";
  @SerializedName(SERIALIZED_NAME_C66607)
  private C666 C666_07;

  public static final String SERIALIZED_NAME_IDENTITY_NUMBER08 = "IdentityNumber_08";
  @SerializedName(SERIALIZED_NAME_IDENTITY_NUMBER08)
  private String identityNumber08;

  public static final String SERIALIZED_NAME_MONETARY_AMOUNT09 = "MonetaryAmount_09";
  @SerializedName(SERIALIZED_NAME_MONETARY_AMOUNT09)
  private String monetaryAmount09;

  public PTK() {
  }

  public PTK C664_01(C664 C664_01) {
    
    this.C664_01 = C664_01;
    return this;
  }

   /**
   * Get C664_01
   * @return C664_01
  **/
  @javax.annotation.Nullable

  public C664 getC66401() {
    return C664_01;
  }


  public void setC66401(C664 C664_01) {
    this.C664_01 = C664_01;
  }


  public PTK pricetariffType02(String pricetariffType02) {
    
    this.pricetariffType02 = pricetariffType02;
    return this;
  }

   /**
   * Get pricetariffType02
   * @return pricetariffType02
  **/
  @javax.annotation.Nullable

  public String getPricetariffType02() {
    return pricetariffType02;
  }


  public void setPricetariffType02(String pricetariffType02) {
    this.pricetariffType02 = pricetariffType02;
  }


  public PTK C310_03(C310 C310_03) {
    
    this.C310_03 = C310_03;
    return this;
  }

   /**
   * Get C310_03
   * @return C310_03
  **/
  @javax.annotation.Nullable

  public C310 getC31003() {
    return C310_03;
  }


  public void setC31003(C310 C310_03) {
    this.C310_03 = C310_03;
  }


  public PTK C306_04(C306 C306_04) {
    
    this.C306_04 = C306_04;
    return this;
  }

   /**
   * Get C306_04
   * @return C306_04
  **/
  @javax.annotation.Nullable

  public C306 getC30604() {
    return C306_04;
  }


  public void setC30604(C306 C306_04) {
    this.C306_04 = C306_04;
  }


  public PTK C665_05(C665 C665_05) {
    
    this.C665_05 = C665_05;
    return this;
  }

   /**
   * Get C665_05
   * @return C665_05
  **/
  @javax.annotation.Nullable

  public C665 getC66505() {
    return C665_05;
  }


  public void setC66505(C665 C665_05) {
    this.C665_05 = C665_05;
  }


  public PTK C666_06(C666 C666_06) {
    
    this.C666_06 = C666_06;
    return this;
  }

   /**
   * Get C666_06
   * @return C666_06
  **/
  @javax.annotation.Nullable

  public C666 getC66606() {
    return C666_06;
  }


  public void setC66606(C666 C666_06) {
    this.C666_06 = C666_06;
  }


  public PTK C666_07(C666 C666_07) {
    
    this.C666_07 = C666_07;
    return this;
  }

   /**
   * Get C666_07
   * @return C666_07
  **/
  @javax.annotation.Nullable

  public C666 getC66607() {
    return C666_07;
  }


  public void setC66607(C666 C666_07) {
    this.C666_07 = C666_07;
  }


  public PTK identityNumber08(String identityNumber08) {
    
    this.identityNumber08 = identityNumber08;
    return this;
  }

   /**
   * Get identityNumber08
   * @return identityNumber08
  **/
  @javax.annotation.Nullable

  public String getIdentityNumber08() {
    return identityNumber08;
  }


  public void setIdentityNumber08(String identityNumber08) {
    this.identityNumber08 = identityNumber08;
  }


  public PTK monetaryAmount09(String monetaryAmount09) {
    
    this.monetaryAmount09 = monetaryAmount09;
    return this;
  }

   /**
   * Get monetaryAmount09
   * @return monetaryAmount09
  **/
  @javax.annotation.Nullable

  public String getMonetaryAmount09() {
    return monetaryAmount09;
  }


  public void setMonetaryAmount09(String monetaryAmount09) {
    this.monetaryAmount09 = monetaryAmount09;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PTK PTK = (PTK) o;
    return Objects.equals(this.C664_01, PTK.C664_01) &&
        Objects.equals(this.pricetariffType02, PTK.pricetariffType02) &&
        Objects.equals(this.C310_03, PTK.C310_03) &&
        Objects.equals(this.C306_04, PTK.C306_04) &&
        Objects.equals(this.C665_05, PTK.C665_05) &&
        Objects.equals(this.C666_06, PTK.C666_06) &&
        Objects.equals(this.C666_07, PTK.C666_07) &&
        Objects.equals(this.identityNumber08, PTK.identityNumber08) &&
        Objects.equals(this.monetaryAmount09, PTK.monetaryAmount09);
  }

  @Override
  public int hashCode() {
    return Objects.hash(C664_01, pricetariffType02, C310_03, C306_04, C665_05, C666_06, C666_07, identityNumber08, monetaryAmount09);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PTK {\n");
    sb.append("    C664_01: ").append(toIndentedString(C664_01)).append("\n");
    sb.append("    pricetariffType02: ").append(toIndentedString(pricetariffType02)).append("\n");
    sb.append("    C310_03: ").append(toIndentedString(C310_03)).append("\n");
    sb.append("    C306_04: ").append(toIndentedString(C306_04)).append("\n");
    sb.append("    C665_05: ").append(toIndentedString(C665_05)).append("\n");
    sb.append("    C666_06: ").append(toIndentedString(C666_06)).append("\n");
    sb.append("    C666_07: ").append(toIndentedString(C666_07)).append("\n");
    sb.append("    identityNumber08: ").append(toIndentedString(identityNumber08)).append("\n");
    sb.append("    monetaryAmount09: ").append(toIndentedString(monetaryAmount09)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("C664_01");
    openapiFields.add("PricetariffType_02");
    openapiFields.add("C310_03");
    openapiFields.add("C306_04");
    openapiFields.add("C665_05");
    openapiFields.add("C666_06");
    openapiFields.add("C666_07");
    openapiFields.add("IdentityNumber_08");
    openapiFields.add("MonetaryAmount_09");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PTK
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PTK.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PTK is not found in the empty JSON string", PTK.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PTK.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PTK` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `C664_01`
      if (jsonObj.get("C664_01") != null && !jsonObj.get("C664_01").isJsonNull()) {
        C664.validateJsonObject(jsonObj.getAsJsonObject("C664_01"));
      }
      if ((jsonObj.get("PricetariffType_02") != null && !jsonObj.get("PricetariffType_02").isJsonNull()) && !jsonObj.get("PricetariffType_02").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PricetariffType_02` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PricetariffType_02").toString()));
      }
      // validate the optional field `C310_03`
      if (jsonObj.get("C310_03") != null && !jsonObj.get("C310_03").isJsonNull()) {
        C310.validateJsonObject(jsonObj.getAsJsonObject("C310_03"));
      }
      // validate the optional field `C306_04`
      if (jsonObj.get("C306_04") != null && !jsonObj.get("C306_04").isJsonNull()) {
        C306.validateJsonObject(jsonObj.getAsJsonObject("C306_04"));
      }
      // validate the optional field `C665_05`
      if (jsonObj.get("C665_05") != null && !jsonObj.get("C665_05").isJsonNull()) {
        C665.validateJsonObject(jsonObj.getAsJsonObject("C665_05"));
      }
      // validate the optional field `C666_06`
      if (jsonObj.get("C666_06") != null && !jsonObj.get("C666_06").isJsonNull()) {
        C666.validateJsonObject(jsonObj.getAsJsonObject("C666_06"));
      }
      // validate the optional field `C666_07`
      if (jsonObj.get("C666_07") != null && !jsonObj.get("C666_07").isJsonNull()) {
        C666.validateJsonObject(jsonObj.getAsJsonObject("C666_07"));
      }
      if ((jsonObj.get("IdentityNumber_08") != null && !jsonObj.get("IdentityNumber_08").isJsonNull()) && !jsonObj.get("IdentityNumber_08").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IdentityNumber_08` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IdentityNumber_08").toString()));
      }
      if ((jsonObj.get("MonetaryAmount_09") != null && !jsonObj.get("MonetaryAmount_09").isJsonNull()) && !jsonObj.get("MonetaryAmount_09").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MonetaryAmount_09` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MonetaryAmount_09").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PTK.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PTK' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PTK> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PTK.class));

       return (TypeAdapter<T>) new TypeAdapter<PTK>() {
           @Override
           public void write(JsonWriter out, PTK value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PTK read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PTK given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PTK
  * @throws IOException if the JSON string is invalid with respect to PTK
  */
  public static PTK fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PTK.class);
  }

 /**
  * Convert an instance of PTK to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

