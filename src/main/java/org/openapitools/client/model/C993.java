/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * C993
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class C993 {
  public static final String SERIALIZED_NAME_PRODUCT_IDENTIFICATION01 = "ProductIdentification_01";
  @SerializedName(SERIALIZED_NAME_PRODUCT_IDENTIFICATION01)
  private String productIdentification01;

  public static final String SERIALIZED_NAME_PARTY_NAME02 = "PartyName_02";
  @SerializedName(SERIALIZED_NAME_PARTY_NAME02)
  private String partyName02;

  public static final String SERIALIZED_NAME_LENGTH_DIMENSION03 = "LengthDimension_03";
  @SerializedName(SERIALIZED_NAME_LENGTH_DIMENSION03)
  private String lengthDimension03;

  public static final String SERIALIZED_NAME_NUMBER_OF_STOPS04 = "NumberOfStops_04";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_STOPS04)
  private String numberOfStops04;

  public static final String SERIALIZED_NAME_DAYS_OF_OPERATION05 = "DaysOfOperation_05";
  @SerializedName(SERIALIZED_NAME_DAYS_OF_OPERATION05)
  private String daysOfOperation05;

  public static final String SERIALIZED_NAME_NUMBER_OF_UNITS06 = "NumberOfUnits_06";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_UNITS06)
  private String numberOfUnits06;

  public static final String SERIALIZED_NAME_QUANTITY07 = "Quantity_07";
  @SerializedName(SERIALIZED_NAME_QUANTITY07)
  private String quantity07;

  public C993() {
  }

  public C993 productIdentification01(String productIdentification01) {
    
    this.productIdentification01 = productIdentification01;
    return this;
  }

   /**
   * Get productIdentification01
   * @return productIdentification01
  **/
  @javax.annotation.Nullable

  public String getProductIdentification01() {
    return productIdentification01;
  }


  public void setProductIdentification01(String productIdentification01) {
    this.productIdentification01 = productIdentification01;
  }


  public C993 partyName02(String partyName02) {
    
    this.partyName02 = partyName02;
    return this;
  }

   /**
   * Get partyName02
   * @return partyName02
  **/
  @javax.annotation.Nullable

  public String getPartyName02() {
    return partyName02;
  }


  public void setPartyName02(String partyName02) {
    this.partyName02 = partyName02;
  }


  public C993 lengthDimension03(String lengthDimension03) {
    
    this.lengthDimension03 = lengthDimension03;
    return this;
  }

   /**
   * Get lengthDimension03
   * @return lengthDimension03
  **/
  @javax.annotation.Nullable

  public String getLengthDimension03() {
    return lengthDimension03;
  }


  public void setLengthDimension03(String lengthDimension03) {
    this.lengthDimension03 = lengthDimension03;
  }


  public C993 numberOfStops04(String numberOfStops04) {
    
    this.numberOfStops04 = numberOfStops04;
    return this;
  }

   /**
   * Get numberOfStops04
   * @return numberOfStops04
  **/
  @javax.annotation.Nullable

  public String getNumberOfStops04() {
    return numberOfStops04;
  }


  public void setNumberOfStops04(String numberOfStops04) {
    this.numberOfStops04 = numberOfStops04;
  }


  public C993 daysOfOperation05(String daysOfOperation05) {
    
    this.daysOfOperation05 = daysOfOperation05;
    return this;
  }

   /**
   * Get daysOfOperation05
   * @return daysOfOperation05
  **/
  @javax.annotation.Nullable

  public String getDaysOfOperation05() {
    return daysOfOperation05;
  }


  public void setDaysOfOperation05(String daysOfOperation05) {
    this.daysOfOperation05 = daysOfOperation05;
  }


  public C993 numberOfUnits06(String numberOfUnits06) {
    
    this.numberOfUnits06 = numberOfUnits06;
    return this;
  }

   /**
   * Get numberOfUnits06
   * @return numberOfUnits06
  **/
  @javax.annotation.Nullable

  public String getNumberOfUnits06() {
    return numberOfUnits06;
  }


  public void setNumberOfUnits06(String numberOfUnits06) {
    this.numberOfUnits06 = numberOfUnits06;
  }


  public C993 quantity07(String quantity07) {
    
    this.quantity07 = quantity07;
    return this;
  }

   /**
   * Get quantity07
   * @return quantity07
  **/
  @javax.annotation.Nullable

  public String getQuantity07() {
    return quantity07;
  }


  public void setQuantity07(String quantity07) {
    this.quantity07 = quantity07;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    C993 C993 = (C993) o;
    return Objects.equals(this.productIdentification01, C993.productIdentification01) &&
        Objects.equals(this.partyName02, C993.partyName02) &&
        Objects.equals(this.lengthDimension03, C993.lengthDimension03) &&
        Objects.equals(this.numberOfStops04, C993.numberOfStops04) &&
        Objects.equals(this.daysOfOperation05, C993.daysOfOperation05) &&
        Objects.equals(this.numberOfUnits06, C993.numberOfUnits06) &&
        Objects.equals(this.quantity07, C993.quantity07);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productIdentification01, partyName02, lengthDimension03, numberOfStops04, daysOfOperation05, numberOfUnits06, quantity07);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class C993 {\n");
    sb.append("    productIdentification01: ").append(toIndentedString(productIdentification01)).append("\n");
    sb.append("    partyName02: ").append(toIndentedString(partyName02)).append("\n");
    sb.append("    lengthDimension03: ").append(toIndentedString(lengthDimension03)).append("\n");
    sb.append("    numberOfStops04: ").append(toIndentedString(numberOfStops04)).append("\n");
    sb.append("    daysOfOperation05: ").append(toIndentedString(daysOfOperation05)).append("\n");
    sb.append("    numberOfUnits06: ").append(toIndentedString(numberOfUnits06)).append("\n");
    sb.append("    quantity07: ").append(toIndentedString(quantity07)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ProductIdentification_01");
    openapiFields.add("PartyName_02");
    openapiFields.add("LengthDimension_03");
    openapiFields.add("NumberOfStops_04");
    openapiFields.add("DaysOfOperation_05");
    openapiFields.add("NumberOfUnits_06");
    openapiFields.add("Quantity_07");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to C993
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!C993.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in C993 is not found in the empty JSON string", C993.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!C993.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `C993` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("ProductIdentification_01") != null && !jsonObj.get("ProductIdentification_01").isJsonNull()) && !jsonObj.get("ProductIdentification_01").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProductIdentification_01` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProductIdentification_01").toString()));
      }
      if ((jsonObj.get("PartyName_02") != null && !jsonObj.get("PartyName_02").isJsonNull()) && !jsonObj.get("PartyName_02").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PartyName_02` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PartyName_02").toString()));
      }
      if ((jsonObj.get("LengthDimension_03") != null && !jsonObj.get("LengthDimension_03").isJsonNull()) && !jsonObj.get("LengthDimension_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LengthDimension_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LengthDimension_03").toString()));
      }
      if ((jsonObj.get("NumberOfStops_04") != null && !jsonObj.get("NumberOfStops_04").isJsonNull()) && !jsonObj.get("NumberOfStops_04").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NumberOfStops_04` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NumberOfStops_04").toString()));
      }
      if ((jsonObj.get("DaysOfOperation_05") != null && !jsonObj.get("DaysOfOperation_05").isJsonNull()) && !jsonObj.get("DaysOfOperation_05").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DaysOfOperation_05` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DaysOfOperation_05").toString()));
      }
      if ((jsonObj.get("NumberOfUnits_06") != null && !jsonObj.get("NumberOfUnits_06").isJsonNull()) && !jsonObj.get("NumberOfUnits_06").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NumberOfUnits_06` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NumberOfUnits_06").toString()));
      }
      if ((jsonObj.get("Quantity_07") != null && !jsonObj.get("Quantity_07").isJsonNull()) && !jsonObj.get("Quantity_07").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Quantity_07` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Quantity_07").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!C993.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'C993' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<C993> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(C993.class));

       return (TypeAdapter<T>) new TypeAdapter<C993>() {
           @Override
           public void write(JsonWriter out, C993 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public C993 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of C993 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of C993
  * @throws IOException if the JSON string is invalid with respect to C993
  */
  public static C993 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, C993.class);
  }

 /**
  * Convert an instance of C993 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

