/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.C643;
import org.openapitools.client.model.EDIFACTID4183;
import org.openapitools.client.model.EDIFACTID5387;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PTS
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class PTS {
  public static final String SERIALIZED_NAME_ITEM_NUMBER01 = "ItemNumber_01";
  @SerializedName(SERIALIZED_NAME_ITEM_NUMBER01)
  private String itemNumber01;

  public static final String SERIALIZED_NAME_C64302 = "C643_02";
  @SerializedName(SERIALIZED_NAME_C64302)
  private C643 C643_02;

  public static final String SERIALIZED_NAME_MONETARY_AMOUNT03 = "MonetaryAmount_03";
  @SerializedName(SERIALIZED_NAME_MONETARY_AMOUNT03)
  private String monetaryAmount03;

  public static final String SERIALIZED_NAME_PRICE_TYPE_QUALIFIER04 = "PriceTypeQualifier_04";
  @SerializedName(SERIALIZED_NAME_PRICE_TYPE_QUALIFIER04)
  private EDIFACTID5387 priceTypeQualifier04;

  public static final String SERIALIZED_NAME_SPECIAL_CONDITION05 = "SpecialCondition_05";
  @SerializedName(SERIALIZED_NAME_SPECIAL_CONDITION05)
  private EDIFACTID4183 specialCondition05;

  public static final String SERIALIZED_NAME_SPECIAL_CONDITION06 = "SpecialCondition_06";
  @SerializedName(SERIALIZED_NAME_SPECIAL_CONDITION06)
  private EDIFACTID4183 specialCondition06;

  public static final String SERIALIZED_NAME_SPECIAL_CONDITION07 = "SpecialCondition_07";
  @SerializedName(SERIALIZED_NAME_SPECIAL_CONDITION07)
  private EDIFACTID4183 specialCondition07;

  public static final String SERIALIZED_NAME_DUTYTAXFEE_CATEGORY08 = "DutytaxfeeCategory_08";
  @SerializedName(SERIALIZED_NAME_DUTYTAXFEE_CATEGORY08)
  private List<String> dutytaxfeeCategory08;

  public static final String SERIALIZED_NAME_C64309 = "C643_09";
  @SerializedName(SERIALIZED_NAME_C64309)
  private List<C643> C643_09;

  public PTS() {
  }

  public PTS itemNumber01(String itemNumber01) {
    
    this.itemNumber01 = itemNumber01;
    return this;
  }

   /**
   * Get itemNumber01
   * @return itemNumber01
  **/
  @javax.annotation.Nullable

  public String getItemNumber01() {
    return itemNumber01;
  }


  public void setItemNumber01(String itemNumber01) {
    this.itemNumber01 = itemNumber01;
  }


  public PTS C643_02(C643 C643_02) {
    
    this.C643_02 = C643_02;
    return this;
  }

   /**
   * Get C643_02
   * @return C643_02
  **/
  @javax.annotation.Nullable

  public C643 getC64302() {
    return C643_02;
  }


  public void setC64302(C643 C643_02) {
    this.C643_02 = C643_02;
  }


  public PTS monetaryAmount03(String monetaryAmount03) {
    
    this.monetaryAmount03 = monetaryAmount03;
    return this;
  }

   /**
   * Get monetaryAmount03
   * @return monetaryAmount03
  **/
  @javax.annotation.Nullable

  public String getMonetaryAmount03() {
    return monetaryAmount03;
  }


  public void setMonetaryAmount03(String monetaryAmount03) {
    this.monetaryAmount03 = monetaryAmount03;
  }


  public PTS priceTypeQualifier04(EDIFACTID5387 priceTypeQualifier04) {
    
    this.priceTypeQualifier04 = priceTypeQualifier04;
    return this;
  }

   /**
   * Get priceTypeQualifier04
   * @return priceTypeQualifier04
  **/
  @javax.annotation.Nullable

  public EDIFACTID5387 getPriceTypeQualifier04() {
    return priceTypeQualifier04;
  }


  public void setPriceTypeQualifier04(EDIFACTID5387 priceTypeQualifier04) {
    this.priceTypeQualifier04 = priceTypeQualifier04;
  }


  public PTS specialCondition05(EDIFACTID4183 specialCondition05) {
    
    this.specialCondition05 = specialCondition05;
    return this;
  }

   /**
   * Get specialCondition05
   * @return specialCondition05
  **/
  @javax.annotation.Nullable

  public EDIFACTID4183 getSpecialCondition05() {
    return specialCondition05;
  }


  public void setSpecialCondition05(EDIFACTID4183 specialCondition05) {
    this.specialCondition05 = specialCondition05;
  }


  public PTS specialCondition06(EDIFACTID4183 specialCondition06) {
    
    this.specialCondition06 = specialCondition06;
    return this;
  }

   /**
   * Get specialCondition06
   * @return specialCondition06
  **/
  @javax.annotation.Nullable

  public EDIFACTID4183 getSpecialCondition06() {
    return specialCondition06;
  }


  public void setSpecialCondition06(EDIFACTID4183 specialCondition06) {
    this.specialCondition06 = specialCondition06;
  }


  public PTS specialCondition07(EDIFACTID4183 specialCondition07) {
    
    this.specialCondition07 = specialCondition07;
    return this;
  }

   /**
   * Get specialCondition07
   * @return specialCondition07
  **/
  @javax.annotation.Nullable

  public EDIFACTID4183 getSpecialCondition07() {
    return specialCondition07;
  }


  public void setSpecialCondition07(EDIFACTID4183 specialCondition07) {
    this.specialCondition07 = specialCondition07;
  }


  public PTS dutytaxfeeCategory08(List<String> dutytaxfeeCategory08) {
    
    this.dutytaxfeeCategory08 = dutytaxfeeCategory08;
    return this;
  }

  public PTS addDutytaxfeeCategory08Item(String dutytaxfeeCategory08Item) {
    if (this.dutytaxfeeCategory08 == null) {
      this.dutytaxfeeCategory08 = new ArrayList<>();
    }
    this.dutytaxfeeCategory08.add(dutytaxfeeCategory08Item);
    return this;
  }

   /**
   * Get dutytaxfeeCategory08
   * @return dutytaxfeeCategory08
  **/
  @javax.annotation.Nullable

  public List<String> getDutytaxfeeCategory08() {
    return dutytaxfeeCategory08;
  }


  public void setDutytaxfeeCategory08(List<String> dutytaxfeeCategory08) {
    this.dutytaxfeeCategory08 = dutytaxfeeCategory08;
  }


  public PTS C643_09(List<C643> C643_09) {
    
    this.C643_09 = C643_09;
    return this;
  }

  public PTS addC64309Item(C643 C643_09Item) {
    if (this.C643_09 == null) {
      this.C643_09 = new ArrayList<>();
    }
    this.C643_09.add(C643_09Item);
    return this;
  }

   /**
   * Get C643_09
   * @return C643_09
  **/
  @javax.annotation.Nullable

  public List<C643> getC64309() {
    return C643_09;
  }


  public void setC64309(List<C643> C643_09) {
    this.C643_09 = C643_09;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PTS PTS = (PTS) o;
    return Objects.equals(this.itemNumber01, PTS.itemNumber01) &&
        Objects.equals(this.C643_02, PTS.C643_02) &&
        Objects.equals(this.monetaryAmount03, PTS.monetaryAmount03) &&
        Objects.equals(this.priceTypeQualifier04, PTS.priceTypeQualifier04) &&
        Objects.equals(this.specialCondition05, PTS.specialCondition05) &&
        Objects.equals(this.specialCondition06, PTS.specialCondition06) &&
        Objects.equals(this.specialCondition07, PTS.specialCondition07) &&
        Objects.equals(this.dutytaxfeeCategory08, PTS.dutytaxfeeCategory08) &&
        Objects.equals(this.C643_09, PTS.C643_09);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemNumber01, C643_02, monetaryAmount03, priceTypeQualifier04, specialCondition05, specialCondition06, specialCondition07, dutytaxfeeCategory08, C643_09);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PTS {\n");
    sb.append("    itemNumber01: ").append(toIndentedString(itemNumber01)).append("\n");
    sb.append("    C643_02: ").append(toIndentedString(C643_02)).append("\n");
    sb.append("    monetaryAmount03: ").append(toIndentedString(monetaryAmount03)).append("\n");
    sb.append("    priceTypeQualifier04: ").append(toIndentedString(priceTypeQualifier04)).append("\n");
    sb.append("    specialCondition05: ").append(toIndentedString(specialCondition05)).append("\n");
    sb.append("    specialCondition06: ").append(toIndentedString(specialCondition06)).append("\n");
    sb.append("    specialCondition07: ").append(toIndentedString(specialCondition07)).append("\n");
    sb.append("    dutytaxfeeCategory08: ").append(toIndentedString(dutytaxfeeCategory08)).append("\n");
    sb.append("    C643_09: ").append(toIndentedString(C643_09)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ItemNumber_01");
    openapiFields.add("C643_02");
    openapiFields.add("MonetaryAmount_03");
    openapiFields.add("PriceTypeQualifier_04");
    openapiFields.add("SpecialCondition_05");
    openapiFields.add("SpecialCondition_06");
    openapiFields.add("SpecialCondition_07");
    openapiFields.add("DutytaxfeeCategory_08");
    openapiFields.add("C643_09");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PTS
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PTS.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PTS is not found in the empty JSON string", PTS.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PTS.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PTS` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("ItemNumber_01") != null && !jsonObj.get("ItemNumber_01").isJsonNull()) && !jsonObj.get("ItemNumber_01").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ItemNumber_01` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ItemNumber_01").toString()));
      }
      // validate the optional field `C643_02`
      if (jsonObj.get("C643_02") != null && !jsonObj.get("C643_02").isJsonNull()) {
        C643.validateJsonObject(jsonObj.getAsJsonObject("C643_02"));
      }
      if ((jsonObj.get("MonetaryAmount_03") != null && !jsonObj.get("MonetaryAmount_03").isJsonNull()) && !jsonObj.get("MonetaryAmount_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MonetaryAmount_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MonetaryAmount_03").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("DutytaxfeeCategory_08") != null && !jsonObj.get("DutytaxfeeCategory_08").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `DutytaxfeeCategory_08` to be an array in the JSON string but got `%s`", jsonObj.get("DutytaxfeeCategory_08").toString()));
      }
      if (jsonObj.get("C643_09") != null && !jsonObj.get("C643_09").isJsonNull()) {
        JsonArray jsonArrayC643_09 = jsonObj.getAsJsonArray("C643_09");
        if (jsonArrayC643_09 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("C643_09").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `C643_09` to be an array in the JSON string but got `%s`", jsonObj.get("C643_09").toString()));
          }

          // validate the optional field `C643_09` (array)
          for (int i = 0; i < jsonArrayC643_09.size(); i++) {
            C643.validateJsonObject(jsonArrayC643_09.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PTS.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PTS' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PTS> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PTS.class));

       return (TypeAdapter<T>) new TypeAdapter<PTS>() {
           @Override
           public void write(JsonWriter out, PTS value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PTS read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PTS given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PTS
  * @throws IOException if the JSON string is invalid with respect to PTS
  */
  public static PTS fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PTS.class);
  }

 /**
  * Convert an instance of PTS to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

