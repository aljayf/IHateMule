/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.EDIFACTID8260;
import org.openapitools.client.model.EDIFACTID9906;
import org.openapitools.client.model.EDIFACTID9978;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * C361
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class C361 {
  public static final String SERIALIZED_NAME_AIRCRAFT_CABIN_VERSION_IDENTIFICATION01 = "AircraftCabinVersionIdentification_01";
  @SerializedName(SERIALIZED_NAME_AIRCRAFT_CABIN_VERSION_IDENTIFICATION01)
  private String aircraftCabinVersionIdentification01;

  public static final String SERIALIZED_NAME_AIRCRAFT_CABIN_VERSION_IDENTIFICATION02 = "AircraftCabinVersionIdentification_02";
  @SerializedName(SERIALIZED_NAME_AIRCRAFT_CABIN_VERSION_IDENTIFICATION02)
  private String aircraftCabinVersionIdentification02;

  public static final String SERIALIZED_NAME_COMPANY_IDENTIFICATION03 = "CompanyIdentification_03";
  @SerializedName(SERIALIZED_NAME_COMPANY_IDENTIFICATION03)
  private EDIFACTID9906 companyIdentification03;

  public static final String SERIALIZED_NAME_EQUIPMENT_IDENTIFICATION_NUMBER04 = "EquipmentIdentificationNumber_04";
  @SerializedName(SERIALIZED_NAME_EQUIPMENT_IDENTIFICATION_NUMBER04)
  private EDIFACTID8260 equipmentIdentificationNumber04;

  public static final String SERIALIZED_NAME_CABIN_FACILITIES_CHARACTERISTIC05 = "CabinFacilitiesCharacteristic_05";
  @SerializedName(SERIALIZED_NAME_CABIN_FACILITIES_CHARACTERISTIC05)
  private EDIFACTID9978 cabinFacilitiesCharacteristic05;

  public static final String SERIALIZED_NAME_CABIN_FACILITIES_CHARACTERISTIC06 = "CabinFacilitiesCharacteristic_06";
  @SerializedName(SERIALIZED_NAME_CABIN_FACILITIES_CHARACTERISTIC06)
  private EDIFACTID9978 cabinFacilitiesCharacteristic06;

  public C361() {
  }

  public C361 aircraftCabinVersionIdentification01(String aircraftCabinVersionIdentification01) {
    
    this.aircraftCabinVersionIdentification01 = aircraftCabinVersionIdentification01;
    return this;
  }

   /**
   * Get aircraftCabinVersionIdentification01
   * @return aircraftCabinVersionIdentification01
  **/
  @javax.annotation.Nullable

  public String getAircraftCabinVersionIdentification01() {
    return aircraftCabinVersionIdentification01;
  }


  public void setAircraftCabinVersionIdentification01(String aircraftCabinVersionIdentification01) {
    this.aircraftCabinVersionIdentification01 = aircraftCabinVersionIdentification01;
  }


  public C361 aircraftCabinVersionIdentification02(String aircraftCabinVersionIdentification02) {
    
    this.aircraftCabinVersionIdentification02 = aircraftCabinVersionIdentification02;
    return this;
  }

   /**
   * Get aircraftCabinVersionIdentification02
   * @return aircraftCabinVersionIdentification02
  **/
  @javax.annotation.Nullable

  public String getAircraftCabinVersionIdentification02() {
    return aircraftCabinVersionIdentification02;
  }


  public void setAircraftCabinVersionIdentification02(String aircraftCabinVersionIdentification02) {
    this.aircraftCabinVersionIdentification02 = aircraftCabinVersionIdentification02;
  }


  public C361 companyIdentification03(EDIFACTID9906 companyIdentification03) {
    
    this.companyIdentification03 = companyIdentification03;
    return this;
  }

   /**
   * Get companyIdentification03
   * @return companyIdentification03
  **/
  @javax.annotation.Nullable

  public EDIFACTID9906 getCompanyIdentification03() {
    return companyIdentification03;
  }


  public void setCompanyIdentification03(EDIFACTID9906 companyIdentification03) {
    this.companyIdentification03 = companyIdentification03;
  }


  public C361 equipmentIdentificationNumber04(EDIFACTID8260 equipmentIdentificationNumber04) {
    
    this.equipmentIdentificationNumber04 = equipmentIdentificationNumber04;
    return this;
  }

   /**
   * Get equipmentIdentificationNumber04
   * @return equipmentIdentificationNumber04
  **/
  @javax.annotation.Nullable

  public EDIFACTID8260 getEquipmentIdentificationNumber04() {
    return equipmentIdentificationNumber04;
  }


  public void setEquipmentIdentificationNumber04(EDIFACTID8260 equipmentIdentificationNumber04) {
    this.equipmentIdentificationNumber04 = equipmentIdentificationNumber04;
  }


  public C361 cabinFacilitiesCharacteristic05(EDIFACTID9978 cabinFacilitiesCharacteristic05) {
    
    this.cabinFacilitiesCharacteristic05 = cabinFacilitiesCharacteristic05;
    return this;
  }

   /**
   * Get cabinFacilitiesCharacteristic05
   * @return cabinFacilitiesCharacteristic05
  **/
  @javax.annotation.Nullable

  public EDIFACTID9978 getCabinFacilitiesCharacteristic05() {
    return cabinFacilitiesCharacteristic05;
  }


  public void setCabinFacilitiesCharacteristic05(EDIFACTID9978 cabinFacilitiesCharacteristic05) {
    this.cabinFacilitiesCharacteristic05 = cabinFacilitiesCharacteristic05;
  }


  public C361 cabinFacilitiesCharacteristic06(EDIFACTID9978 cabinFacilitiesCharacteristic06) {
    
    this.cabinFacilitiesCharacteristic06 = cabinFacilitiesCharacteristic06;
    return this;
  }

   /**
   * Get cabinFacilitiesCharacteristic06
   * @return cabinFacilitiesCharacteristic06
  **/
  @javax.annotation.Nullable

  public EDIFACTID9978 getCabinFacilitiesCharacteristic06() {
    return cabinFacilitiesCharacteristic06;
  }


  public void setCabinFacilitiesCharacteristic06(EDIFACTID9978 cabinFacilitiesCharacteristic06) {
    this.cabinFacilitiesCharacteristic06 = cabinFacilitiesCharacteristic06;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    C361 C361 = (C361) o;
    return Objects.equals(this.aircraftCabinVersionIdentification01, C361.aircraftCabinVersionIdentification01) &&
        Objects.equals(this.aircraftCabinVersionIdentification02, C361.aircraftCabinVersionIdentification02) &&
        Objects.equals(this.companyIdentification03, C361.companyIdentification03) &&
        Objects.equals(this.equipmentIdentificationNumber04, C361.equipmentIdentificationNumber04) &&
        Objects.equals(this.cabinFacilitiesCharacteristic05, C361.cabinFacilitiesCharacteristic05) &&
        Objects.equals(this.cabinFacilitiesCharacteristic06, C361.cabinFacilitiesCharacteristic06);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aircraftCabinVersionIdentification01, aircraftCabinVersionIdentification02, companyIdentification03, equipmentIdentificationNumber04, cabinFacilitiesCharacteristic05, cabinFacilitiesCharacteristic06);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class C361 {\n");
    sb.append("    aircraftCabinVersionIdentification01: ").append(toIndentedString(aircraftCabinVersionIdentification01)).append("\n");
    sb.append("    aircraftCabinVersionIdentification02: ").append(toIndentedString(aircraftCabinVersionIdentification02)).append("\n");
    sb.append("    companyIdentification03: ").append(toIndentedString(companyIdentification03)).append("\n");
    sb.append("    equipmentIdentificationNumber04: ").append(toIndentedString(equipmentIdentificationNumber04)).append("\n");
    sb.append("    cabinFacilitiesCharacteristic05: ").append(toIndentedString(cabinFacilitiesCharacteristic05)).append("\n");
    sb.append("    cabinFacilitiesCharacteristic06: ").append(toIndentedString(cabinFacilitiesCharacteristic06)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AircraftCabinVersionIdentification_01");
    openapiFields.add("AircraftCabinVersionIdentification_02");
    openapiFields.add("CompanyIdentification_03");
    openapiFields.add("EquipmentIdentificationNumber_04");
    openapiFields.add("CabinFacilitiesCharacteristic_05");
    openapiFields.add("CabinFacilitiesCharacteristic_06");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to C361
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!C361.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in C361 is not found in the empty JSON string", C361.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!C361.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `C361` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("AircraftCabinVersionIdentification_01") != null && !jsonObj.get("AircraftCabinVersionIdentification_01").isJsonNull()) && !jsonObj.get("AircraftCabinVersionIdentification_01").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AircraftCabinVersionIdentification_01` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AircraftCabinVersionIdentification_01").toString()));
      }
      if ((jsonObj.get("AircraftCabinVersionIdentification_02") != null && !jsonObj.get("AircraftCabinVersionIdentification_02").isJsonNull()) && !jsonObj.get("AircraftCabinVersionIdentification_02").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AircraftCabinVersionIdentification_02` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AircraftCabinVersionIdentification_02").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!C361.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'C361' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<C361> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(C361.class));

       return (TypeAdapter<T>) new TypeAdapter<C361>() {
           @Override
           public void write(JsonWriter out, C361 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public C361 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of C361 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of C361
  * @throws IOException if the JSON string is invalid with respect to C361
  */
  public static C361 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, C361.class);
  }

 /**
  * Convert an instance of C361 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

