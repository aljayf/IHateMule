/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.C300;
import org.openapitools.client.model.C328;
import org.openapitools.client.model.C336;
import org.openapitools.client.model.C354;
import org.openapitools.client.model.EDIFACTID9972;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ORG
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class ORG {
  public static final String SERIALIZED_NAME_C33601 = "C336_01";
  @SerializedName(SERIALIZED_NAME_C33601)
  private C336 C336_01;

  public static final String SERIALIZED_NAME_C30002 = "C300_02";
  @SerializedName(SERIALIZED_NAME_C30002)
  private C300 C300_02;

  public static final String SERIALIZED_NAME_C32803 = "C328_03";
  @SerializedName(SERIALIZED_NAME_C32803)
  private C328 C328_03;

  public static final String SERIALIZED_NAME_C33604 = "C336_04";
  @SerializedName(SERIALIZED_NAME_C33604)
  private C336 C336_04;

  public static final String SERIALIZED_NAME_ORIGINATOR_TYPE_CODE05 = "OriginatorTypeCode_05";
  @SerializedName(SERIALIZED_NAME_ORIGINATOR_TYPE_CODE05)
  private EDIFACTID9972 originatorTypeCode05;

  public static final String SERIALIZED_NAME_C35406 = "C354_06";
  @SerializedName(SERIALIZED_NAME_C35406)
  private C354 C354_06;

  public static final String SERIALIZED_NAME_ORIGINATORS_AUTHORITY_REQUEST_CODE07 = "OriginatorsAuthorityRequestCode_07";
  @SerializedName(SERIALIZED_NAME_ORIGINATORS_AUTHORITY_REQUEST_CODE07)
  private String originatorsAuthorityRequestCode07;

  public static final String SERIALIZED_NAME_COMMUNICATION_NUMBER08 = "CommunicationNumber_08";
  @SerializedName(SERIALIZED_NAME_COMMUNICATION_NUMBER08)
  private String communicationNumber08;

  public static final String SERIALIZED_NAME_PARTY_ID_IDENTIFICATION09 = "PartyIdIdentification_09";
  @SerializedName(SERIALIZED_NAME_PARTY_ID_IDENTIFICATION09)
  private String partyIdIdentification09;

  public ORG() {
  }

  public ORG C336_01(C336 C336_01) {
    
    this.C336_01 = C336_01;
    return this;
  }

   /**
   * Get C336_01
   * @return C336_01
  **/
  @javax.annotation.Nullable

  public C336 getC33601() {
    return C336_01;
  }


  public void setC33601(C336 C336_01) {
    this.C336_01 = C336_01;
  }


  public ORG C300_02(C300 C300_02) {
    
    this.C300_02 = C300_02;
    return this;
  }

   /**
   * Get C300_02
   * @return C300_02
  **/
  @javax.annotation.Nullable

  public C300 getC30002() {
    return C300_02;
  }


  public void setC30002(C300 C300_02) {
    this.C300_02 = C300_02;
  }


  public ORG C328_03(C328 C328_03) {
    
    this.C328_03 = C328_03;
    return this;
  }

   /**
   * Get C328_03
   * @return C328_03
  **/
  @javax.annotation.Nullable

  public C328 getC32803() {
    return C328_03;
  }


  public void setC32803(C328 C328_03) {
    this.C328_03 = C328_03;
  }


  public ORG C336_04(C336 C336_04) {
    
    this.C336_04 = C336_04;
    return this;
  }

   /**
   * Get C336_04
   * @return C336_04
  **/
  @javax.annotation.Nullable

  public C336 getC33604() {
    return C336_04;
  }


  public void setC33604(C336 C336_04) {
    this.C336_04 = C336_04;
  }


  public ORG originatorTypeCode05(EDIFACTID9972 originatorTypeCode05) {
    
    this.originatorTypeCode05 = originatorTypeCode05;
    return this;
  }

   /**
   * Get originatorTypeCode05
   * @return originatorTypeCode05
  **/
  @javax.annotation.Nullable

  public EDIFACTID9972 getOriginatorTypeCode05() {
    return originatorTypeCode05;
  }


  public void setOriginatorTypeCode05(EDIFACTID9972 originatorTypeCode05) {
    this.originatorTypeCode05 = originatorTypeCode05;
  }


  public ORG C354_06(C354 C354_06) {
    
    this.C354_06 = C354_06;
    return this;
  }

   /**
   * Get C354_06
   * @return C354_06
  **/
  @javax.annotation.Nullable

  public C354 getC35406() {
    return C354_06;
  }


  public void setC35406(C354 C354_06) {
    this.C354_06 = C354_06;
  }


  public ORG originatorsAuthorityRequestCode07(String originatorsAuthorityRequestCode07) {
    
    this.originatorsAuthorityRequestCode07 = originatorsAuthorityRequestCode07;
    return this;
  }

   /**
   * Get originatorsAuthorityRequestCode07
   * @return originatorsAuthorityRequestCode07
  **/
  @javax.annotation.Nullable

  public String getOriginatorsAuthorityRequestCode07() {
    return originatorsAuthorityRequestCode07;
  }


  public void setOriginatorsAuthorityRequestCode07(String originatorsAuthorityRequestCode07) {
    this.originatorsAuthorityRequestCode07 = originatorsAuthorityRequestCode07;
  }


  public ORG communicationNumber08(String communicationNumber08) {
    
    this.communicationNumber08 = communicationNumber08;
    return this;
  }

   /**
   * Get communicationNumber08
   * @return communicationNumber08
  **/
  @javax.annotation.Nullable

  public String getCommunicationNumber08() {
    return communicationNumber08;
  }


  public void setCommunicationNumber08(String communicationNumber08) {
    this.communicationNumber08 = communicationNumber08;
  }


  public ORG partyIdIdentification09(String partyIdIdentification09) {
    
    this.partyIdIdentification09 = partyIdIdentification09;
    return this;
  }

   /**
   * Get partyIdIdentification09
   * @return partyIdIdentification09
  **/
  @javax.annotation.Nullable

  public String getPartyIdIdentification09() {
    return partyIdIdentification09;
  }


  public void setPartyIdIdentification09(String partyIdIdentification09) {
    this.partyIdIdentification09 = partyIdIdentification09;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ORG ORG = (ORG) o;
    return Objects.equals(this.C336_01, ORG.C336_01) &&
        Objects.equals(this.C300_02, ORG.C300_02) &&
        Objects.equals(this.C328_03, ORG.C328_03) &&
        Objects.equals(this.C336_04, ORG.C336_04) &&
        Objects.equals(this.originatorTypeCode05, ORG.originatorTypeCode05) &&
        Objects.equals(this.C354_06, ORG.C354_06) &&
        Objects.equals(this.originatorsAuthorityRequestCode07, ORG.originatorsAuthorityRequestCode07) &&
        Objects.equals(this.communicationNumber08, ORG.communicationNumber08) &&
        Objects.equals(this.partyIdIdentification09, ORG.partyIdIdentification09);
  }

  @Override
  public int hashCode() {
    return Objects.hash(C336_01, C300_02, C328_03, C336_04, originatorTypeCode05, C354_06, originatorsAuthorityRequestCode07, communicationNumber08, partyIdIdentification09);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ORG {\n");
    sb.append("    C336_01: ").append(toIndentedString(C336_01)).append("\n");
    sb.append("    C300_02: ").append(toIndentedString(C300_02)).append("\n");
    sb.append("    C328_03: ").append(toIndentedString(C328_03)).append("\n");
    sb.append("    C336_04: ").append(toIndentedString(C336_04)).append("\n");
    sb.append("    originatorTypeCode05: ").append(toIndentedString(originatorTypeCode05)).append("\n");
    sb.append("    C354_06: ").append(toIndentedString(C354_06)).append("\n");
    sb.append("    originatorsAuthorityRequestCode07: ").append(toIndentedString(originatorsAuthorityRequestCode07)).append("\n");
    sb.append("    communicationNumber08: ").append(toIndentedString(communicationNumber08)).append("\n");
    sb.append("    partyIdIdentification09: ").append(toIndentedString(partyIdIdentification09)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("C336_01");
    openapiFields.add("C300_02");
    openapiFields.add("C328_03");
    openapiFields.add("C336_04");
    openapiFields.add("OriginatorTypeCode_05");
    openapiFields.add("C354_06");
    openapiFields.add("OriginatorsAuthorityRequestCode_07");
    openapiFields.add("CommunicationNumber_08");
    openapiFields.add("PartyIdIdentification_09");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ORG
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ORG.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ORG is not found in the empty JSON string", ORG.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ORG.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ORG` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `C336_01`
      if (jsonObj.get("C336_01") != null && !jsonObj.get("C336_01").isJsonNull()) {
        C336.validateJsonObject(jsonObj.getAsJsonObject("C336_01"));
      }
      // validate the optional field `C300_02`
      if (jsonObj.get("C300_02") != null && !jsonObj.get("C300_02").isJsonNull()) {
        C300.validateJsonObject(jsonObj.getAsJsonObject("C300_02"));
      }
      // validate the optional field `C328_03`
      if (jsonObj.get("C328_03") != null && !jsonObj.get("C328_03").isJsonNull()) {
        C328.validateJsonObject(jsonObj.getAsJsonObject("C328_03"));
      }
      // validate the optional field `C336_04`
      if (jsonObj.get("C336_04") != null && !jsonObj.get("C336_04").isJsonNull()) {
        C336.validateJsonObject(jsonObj.getAsJsonObject("C336_04"));
      }
      // validate the optional field `C354_06`
      if (jsonObj.get("C354_06") != null && !jsonObj.get("C354_06").isJsonNull()) {
        C354.validateJsonObject(jsonObj.getAsJsonObject("C354_06"));
      }
      if ((jsonObj.get("OriginatorsAuthorityRequestCode_07") != null && !jsonObj.get("OriginatorsAuthorityRequestCode_07").isJsonNull()) && !jsonObj.get("OriginatorsAuthorityRequestCode_07").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OriginatorsAuthorityRequestCode_07` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OriginatorsAuthorityRequestCode_07").toString()));
      }
      if ((jsonObj.get("CommunicationNumber_08") != null && !jsonObj.get("CommunicationNumber_08").isJsonNull()) && !jsonObj.get("CommunicationNumber_08").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CommunicationNumber_08` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CommunicationNumber_08").toString()));
      }
      if ((jsonObj.get("PartyIdIdentification_09") != null && !jsonObj.get("PartyIdIdentification_09").isJsonNull()) && !jsonObj.get("PartyIdIdentification_09").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PartyIdIdentification_09` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PartyIdIdentification_09").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ORG.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ORG' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ORG> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ORG.class));

       return (TypeAdapter<T>) new TypeAdapter<ORG>() {
           @Override
           public void write(JsonWriter out, ORG value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ORG read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ORG given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ORG
  * @throws IOException if the JSON string is invalid with respect to ORG
  */
  public static ORG fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ORG.class);
  }

 /**
  * Convert an instance of ORG to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

