/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.EDIFACTID7009;
import org.openapitools.client.model.EDIFACTID7037;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * C308
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class C308 {
  public static final String SERIALIZED_NAME_PRODUCT_IDENTIFICATION01 = "ProductIdentification_01";
  @SerializedName(SERIALIZED_NAME_PRODUCT_IDENTIFICATION01)
  private String productIdentification01;

  public static final String SERIALIZED_NAME_CHARACTERISTIC_IDENTIFICATION02 = "CharacteristicIdentification_02";
  @SerializedName(SERIALIZED_NAME_CHARACTERISTIC_IDENTIFICATION02)
  private EDIFACTID7037 characteristicIdentification02;

  public static final String SERIALIZED_NAME_PRODUCT_IDENTIFICATION_CHARACTERISTIC03 = "ProductIdentificationCharacteristic_03";
  @SerializedName(SERIALIZED_NAME_PRODUCT_IDENTIFICATION_CHARACTERISTIC03)
  private String productIdentificationCharacteristic03;

  public static final String SERIALIZED_NAME_ITEM_DESCRIPTION_IDENTIFICATION04 = "ItemDescriptionIdentification_04";
  @SerializedName(SERIALIZED_NAME_ITEM_DESCRIPTION_IDENTIFICATION04)
  private EDIFACTID7009 itemDescriptionIdentification04;

  public static final String SERIALIZED_NAME_ITEM_DESCRIPTION_IDENTIFICATION05 = "ItemDescriptionIdentification_05";
  @SerializedName(SERIALIZED_NAME_ITEM_DESCRIPTION_IDENTIFICATION05)
  private EDIFACTID7009 itemDescriptionIdentification05;

  public static final String SERIALIZED_NAME_ITEM_DESCRIPTION_IDENTIFICATION06 = "ItemDescriptionIdentification_06";
  @SerializedName(SERIALIZED_NAME_ITEM_DESCRIPTION_IDENTIFICATION06)
  private EDIFACTID7009 itemDescriptionIdentification06;

  public C308() {
  }

  public C308 productIdentification01(String productIdentification01) {
    
    this.productIdentification01 = productIdentification01;
    return this;
  }

   /**
   * Get productIdentification01
   * @return productIdentification01
  **/
  @javax.annotation.Nonnull

  public String getProductIdentification01() {
    return productIdentification01;
  }


  public void setProductIdentification01(String productIdentification01) {
    this.productIdentification01 = productIdentification01;
  }


  public C308 characteristicIdentification02(EDIFACTID7037 characteristicIdentification02) {
    
    this.characteristicIdentification02 = characteristicIdentification02;
    return this;
  }

   /**
   * Get characteristicIdentification02
   * @return characteristicIdentification02
  **/
  @javax.annotation.Nullable

  public EDIFACTID7037 getCharacteristicIdentification02() {
    return characteristicIdentification02;
  }


  public void setCharacteristicIdentification02(EDIFACTID7037 characteristicIdentification02) {
    this.characteristicIdentification02 = characteristicIdentification02;
  }


  public C308 productIdentificationCharacteristic03(String productIdentificationCharacteristic03) {
    
    this.productIdentificationCharacteristic03 = productIdentificationCharacteristic03;
    return this;
  }

   /**
   * Get productIdentificationCharacteristic03
   * @return productIdentificationCharacteristic03
  **/
  @javax.annotation.Nullable

  public String getProductIdentificationCharacteristic03() {
    return productIdentificationCharacteristic03;
  }


  public void setProductIdentificationCharacteristic03(String productIdentificationCharacteristic03) {
    this.productIdentificationCharacteristic03 = productIdentificationCharacteristic03;
  }


  public C308 itemDescriptionIdentification04(EDIFACTID7009 itemDescriptionIdentification04) {
    
    this.itemDescriptionIdentification04 = itemDescriptionIdentification04;
    return this;
  }

   /**
   * Get itemDescriptionIdentification04
   * @return itemDescriptionIdentification04
  **/
  @javax.annotation.Nullable

  public EDIFACTID7009 getItemDescriptionIdentification04() {
    return itemDescriptionIdentification04;
  }


  public void setItemDescriptionIdentification04(EDIFACTID7009 itemDescriptionIdentification04) {
    this.itemDescriptionIdentification04 = itemDescriptionIdentification04;
  }


  public C308 itemDescriptionIdentification05(EDIFACTID7009 itemDescriptionIdentification05) {
    
    this.itemDescriptionIdentification05 = itemDescriptionIdentification05;
    return this;
  }

   /**
   * Get itemDescriptionIdentification05
   * @return itemDescriptionIdentification05
  **/
  @javax.annotation.Nullable

  public EDIFACTID7009 getItemDescriptionIdentification05() {
    return itemDescriptionIdentification05;
  }


  public void setItemDescriptionIdentification05(EDIFACTID7009 itemDescriptionIdentification05) {
    this.itemDescriptionIdentification05 = itemDescriptionIdentification05;
  }


  public C308 itemDescriptionIdentification06(EDIFACTID7009 itemDescriptionIdentification06) {
    
    this.itemDescriptionIdentification06 = itemDescriptionIdentification06;
    return this;
  }

   /**
   * Get itemDescriptionIdentification06
   * @return itemDescriptionIdentification06
  **/
  @javax.annotation.Nullable

  public EDIFACTID7009 getItemDescriptionIdentification06() {
    return itemDescriptionIdentification06;
  }


  public void setItemDescriptionIdentification06(EDIFACTID7009 itemDescriptionIdentification06) {
    this.itemDescriptionIdentification06 = itemDescriptionIdentification06;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    C308 C308 = (C308) o;
    return Objects.equals(this.productIdentification01, C308.productIdentification01) &&
        Objects.equals(this.characteristicIdentification02, C308.characteristicIdentification02) &&
        Objects.equals(this.productIdentificationCharacteristic03, C308.productIdentificationCharacteristic03) &&
        Objects.equals(this.itemDescriptionIdentification04, C308.itemDescriptionIdentification04) &&
        Objects.equals(this.itemDescriptionIdentification05, C308.itemDescriptionIdentification05) &&
        Objects.equals(this.itemDescriptionIdentification06, C308.itemDescriptionIdentification06);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productIdentification01, characteristicIdentification02, productIdentificationCharacteristic03, itemDescriptionIdentification04, itemDescriptionIdentification05, itemDescriptionIdentification06);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class C308 {\n");
    sb.append("    productIdentification01: ").append(toIndentedString(productIdentification01)).append("\n");
    sb.append("    characteristicIdentification02: ").append(toIndentedString(characteristicIdentification02)).append("\n");
    sb.append("    productIdentificationCharacteristic03: ").append(toIndentedString(productIdentificationCharacteristic03)).append("\n");
    sb.append("    itemDescriptionIdentification04: ").append(toIndentedString(itemDescriptionIdentification04)).append("\n");
    sb.append("    itemDescriptionIdentification05: ").append(toIndentedString(itemDescriptionIdentification05)).append("\n");
    sb.append("    itemDescriptionIdentification06: ").append(toIndentedString(itemDescriptionIdentification06)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ProductIdentification_01");
    openapiFields.add("CharacteristicIdentification_02");
    openapiFields.add("ProductIdentificationCharacteristic_03");
    openapiFields.add("ItemDescriptionIdentification_04");
    openapiFields.add("ItemDescriptionIdentification_05");
    openapiFields.add("ItemDescriptionIdentification_06");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ProductIdentification_01");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to C308
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!C308.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in C308 is not found in the empty JSON string", C308.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!C308.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `C308` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : C308.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("ProductIdentification_01").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProductIdentification_01` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProductIdentification_01").toString()));
      }
      if ((jsonObj.get("ProductIdentificationCharacteristic_03") != null && !jsonObj.get("ProductIdentificationCharacteristic_03").isJsonNull()) && !jsonObj.get("ProductIdentificationCharacteristic_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProductIdentificationCharacteristic_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProductIdentificationCharacteristic_03").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!C308.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'C308' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<C308> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(C308.class));

       return (TypeAdapter<T>) new TypeAdapter<C308>() {
           @Override
           public void write(JsonWriter out, C308 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public C308 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of C308 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of C308
  * @throws IOException if the JSON string is invalid with respect to C308
  */
  public static C308 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, C308.class);
  }

 /**
  * Convert an instance of C308 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

