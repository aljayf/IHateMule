/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.EDIFACTID6411;
import org.openapitools.client.model.EDIFACTID9825;
import org.openapitools.client.model.EDIFACTID9960;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * C332
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class C332 {
  public static final String SERIALIZED_NAME_SPECIAL_REQUIREMENT_DATA01 = "SpecialRequirementData_01";
  @SerializedName(SERIALIZED_NAME_SPECIAL_REQUIREMENT_DATA01)
  private EDIFACTID9960 specialRequirementData01;

  public static final String SERIALIZED_NAME_MEASURE_UNIT_QUALIFIER02 = "MeasureUnitQualifier_02";
  @SerializedName(SERIALIZED_NAME_MEASURE_UNIT_QUALIFIER02)
  private EDIFACTID6411 measureUnitQualifier02;

  public static final String SERIALIZED_NAME_TRAVELER_REFERENCE_NUMBER03 = "TravelerReferenceNumber_03";
  @SerializedName(SERIALIZED_NAME_TRAVELER_REFERENCE_NUMBER03)
  private String travelerReferenceNumber03;

  public static final String SERIALIZED_NAME_SEAT_CHARACTERISTIC04 = "SeatCharacteristic_04";
  @SerializedName(SERIALIZED_NAME_SEAT_CHARACTERISTIC04)
  private EDIFACTID9825 seatCharacteristic04;

  public static final String SERIALIZED_NAME_SEAT_CHARACTERISTIC05 = "SeatCharacteristic_05";
  @SerializedName(SERIALIZED_NAME_SEAT_CHARACTERISTIC05)
  private EDIFACTID9825 seatCharacteristic05;

  public static final String SERIALIZED_NAME_SEAT_CHARACTERISTIC06 = "SeatCharacteristic_06";
  @SerializedName(SERIALIZED_NAME_SEAT_CHARACTERISTIC06)
  private EDIFACTID9825 seatCharacteristic06;

  public static final String SERIALIZED_NAME_SEAT_CHARACTERISTIC07 = "SeatCharacteristic_07";
  @SerializedName(SERIALIZED_NAME_SEAT_CHARACTERISTIC07)
  private EDIFACTID9825 seatCharacteristic07;

  public static final String SERIALIZED_NAME_SEAT_CHARACTERISTIC08 = "SeatCharacteristic_08";
  @SerializedName(SERIALIZED_NAME_SEAT_CHARACTERISTIC08)
  private EDIFACTID9825 seatCharacteristic08;

  public C332() {
  }

  public C332 specialRequirementData01(EDIFACTID9960 specialRequirementData01) {
    
    this.specialRequirementData01 = specialRequirementData01;
    return this;
  }

   /**
   * Get specialRequirementData01
   * @return specialRequirementData01
  **/
  @javax.annotation.Nullable

  public EDIFACTID9960 getSpecialRequirementData01() {
    return specialRequirementData01;
  }


  public void setSpecialRequirementData01(EDIFACTID9960 specialRequirementData01) {
    this.specialRequirementData01 = specialRequirementData01;
  }


  public C332 measureUnitQualifier02(EDIFACTID6411 measureUnitQualifier02) {
    
    this.measureUnitQualifier02 = measureUnitQualifier02;
    return this;
  }

   /**
   * Get measureUnitQualifier02
   * @return measureUnitQualifier02
  **/
  @javax.annotation.Nullable

  public EDIFACTID6411 getMeasureUnitQualifier02() {
    return measureUnitQualifier02;
  }


  public void setMeasureUnitQualifier02(EDIFACTID6411 measureUnitQualifier02) {
    this.measureUnitQualifier02 = measureUnitQualifier02;
  }


  public C332 travelerReferenceNumber03(String travelerReferenceNumber03) {
    
    this.travelerReferenceNumber03 = travelerReferenceNumber03;
    return this;
  }

   /**
   * Get travelerReferenceNumber03
   * @return travelerReferenceNumber03
  **/
  @javax.annotation.Nullable

  public String getTravelerReferenceNumber03() {
    return travelerReferenceNumber03;
  }


  public void setTravelerReferenceNumber03(String travelerReferenceNumber03) {
    this.travelerReferenceNumber03 = travelerReferenceNumber03;
  }


  public C332 seatCharacteristic04(EDIFACTID9825 seatCharacteristic04) {
    
    this.seatCharacteristic04 = seatCharacteristic04;
    return this;
  }

   /**
   * Get seatCharacteristic04
   * @return seatCharacteristic04
  **/
  @javax.annotation.Nullable

  public EDIFACTID9825 getSeatCharacteristic04() {
    return seatCharacteristic04;
  }


  public void setSeatCharacteristic04(EDIFACTID9825 seatCharacteristic04) {
    this.seatCharacteristic04 = seatCharacteristic04;
  }


  public C332 seatCharacteristic05(EDIFACTID9825 seatCharacteristic05) {
    
    this.seatCharacteristic05 = seatCharacteristic05;
    return this;
  }

   /**
   * Get seatCharacteristic05
   * @return seatCharacteristic05
  **/
  @javax.annotation.Nullable

  public EDIFACTID9825 getSeatCharacteristic05() {
    return seatCharacteristic05;
  }


  public void setSeatCharacteristic05(EDIFACTID9825 seatCharacteristic05) {
    this.seatCharacteristic05 = seatCharacteristic05;
  }


  public C332 seatCharacteristic06(EDIFACTID9825 seatCharacteristic06) {
    
    this.seatCharacteristic06 = seatCharacteristic06;
    return this;
  }

   /**
   * Get seatCharacteristic06
   * @return seatCharacteristic06
  **/
  @javax.annotation.Nullable

  public EDIFACTID9825 getSeatCharacteristic06() {
    return seatCharacteristic06;
  }


  public void setSeatCharacteristic06(EDIFACTID9825 seatCharacteristic06) {
    this.seatCharacteristic06 = seatCharacteristic06;
  }


  public C332 seatCharacteristic07(EDIFACTID9825 seatCharacteristic07) {
    
    this.seatCharacteristic07 = seatCharacteristic07;
    return this;
  }

   /**
   * Get seatCharacteristic07
   * @return seatCharacteristic07
  **/
  @javax.annotation.Nullable

  public EDIFACTID9825 getSeatCharacteristic07() {
    return seatCharacteristic07;
  }


  public void setSeatCharacteristic07(EDIFACTID9825 seatCharacteristic07) {
    this.seatCharacteristic07 = seatCharacteristic07;
  }


  public C332 seatCharacteristic08(EDIFACTID9825 seatCharacteristic08) {
    
    this.seatCharacteristic08 = seatCharacteristic08;
    return this;
  }

   /**
   * Get seatCharacteristic08
   * @return seatCharacteristic08
  **/
  @javax.annotation.Nullable

  public EDIFACTID9825 getSeatCharacteristic08() {
    return seatCharacteristic08;
  }


  public void setSeatCharacteristic08(EDIFACTID9825 seatCharacteristic08) {
    this.seatCharacteristic08 = seatCharacteristic08;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    C332 C332 = (C332) o;
    return Objects.equals(this.specialRequirementData01, C332.specialRequirementData01) &&
        Objects.equals(this.measureUnitQualifier02, C332.measureUnitQualifier02) &&
        Objects.equals(this.travelerReferenceNumber03, C332.travelerReferenceNumber03) &&
        Objects.equals(this.seatCharacteristic04, C332.seatCharacteristic04) &&
        Objects.equals(this.seatCharacteristic05, C332.seatCharacteristic05) &&
        Objects.equals(this.seatCharacteristic06, C332.seatCharacteristic06) &&
        Objects.equals(this.seatCharacteristic07, C332.seatCharacteristic07) &&
        Objects.equals(this.seatCharacteristic08, C332.seatCharacteristic08);
  }

  @Override
  public int hashCode() {
    return Objects.hash(specialRequirementData01, measureUnitQualifier02, travelerReferenceNumber03, seatCharacteristic04, seatCharacteristic05, seatCharacteristic06, seatCharacteristic07, seatCharacteristic08);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class C332 {\n");
    sb.append("    specialRequirementData01: ").append(toIndentedString(specialRequirementData01)).append("\n");
    sb.append("    measureUnitQualifier02: ").append(toIndentedString(measureUnitQualifier02)).append("\n");
    sb.append("    travelerReferenceNumber03: ").append(toIndentedString(travelerReferenceNumber03)).append("\n");
    sb.append("    seatCharacteristic04: ").append(toIndentedString(seatCharacteristic04)).append("\n");
    sb.append("    seatCharacteristic05: ").append(toIndentedString(seatCharacteristic05)).append("\n");
    sb.append("    seatCharacteristic06: ").append(toIndentedString(seatCharacteristic06)).append("\n");
    sb.append("    seatCharacteristic07: ").append(toIndentedString(seatCharacteristic07)).append("\n");
    sb.append("    seatCharacteristic08: ").append(toIndentedString(seatCharacteristic08)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SpecialRequirementData_01");
    openapiFields.add("MeasureUnitQualifier_02");
    openapiFields.add("TravelerReferenceNumber_03");
    openapiFields.add("SeatCharacteristic_04");
    openapiFields.add("SeatCharacteristic_05");
    openapiFields.add("SeatCharacteristic_06");
    openapiFields.add("SeatCharacteristic_07");
    openapiFields.add("SeatCharacteristic_08");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to C332
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!C332.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in C332 is not found in the empty JSON string", C332.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!C332.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `C332` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("TravelerReferenceNumber_03") != null && !jsonObj.get("TravelerReferenceNumber_03").isJsonNull()) && !jsonObj.get("TravelerReferenceNumber_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TravelerReferenceNumber_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TravelerReferenceNumber_03").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!C332.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'C332' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<C332> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(C332.class));

       return (TypeAdapter<T>) new TypeAdapter<C332>() {
           @Override
           public void write(JsonWriter out, C332 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public C332 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of C332 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of C332
  * @throws IOException if the JSON string is invalid with respect to C332
  */
  public static C332 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, C332.class);
  }

 /**
  * Convert an instance of C332 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

