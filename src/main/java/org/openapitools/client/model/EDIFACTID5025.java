/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets EDIFACT_ID_5025
 */
@JsonAdapter(EDIFACTID5025.Adapter.class)
public enum EDIFACTID5025 {
  
  _1("1"),
  
  _10("10"),
  
  _11("11"),
  
  _12("12"),
  
  _13("13"),
  
  _14("14"),
  
  _15("15"),
  
  _16("16"),
  
  _17("17"),
  
  _18("18"),
  
  _19("19"),
  
  _2("2"),
  
  _20("20"),
  
  _21("21"),
  
  _22("22"),
  
  _23("23"),
  
  _24("24"),
  
  _25("25"),
  
  _26("26"),
  
  _27("27"),
  
  _28("28"),
  
  _29("29"),
  
  _3("3"),
  
  _30("30"),
  
  _4("4"),
  
  _5("5"),
  
  _6("6"),
  
  _7("7"),
  
  _700("700"),
  
  _701("701"),
  
  _702("702"),
  
  _703("703"),
  
  _704("704"),
  
  _705("705"),
  
  _706("706"),
  
  _707("707"),
  
  _708("708"),
  
  _709("709"),
  
  _710("710"),
  
  _711("711"),
  
  _712("712"),
  
  _713("713"),
  
  _714("714"),
  
  _715("715"),
  
  _716("716"),
  
  _717("717"),
  
  _718("718"),
  
  _719("719"),
  
  _720("720"),
  
  _721("721"),
  
  _722("722"),
  
  _723("723"),
  
  _724("724"),
  
  _725("725"),
  
  _726("726"),
  
  _727("727"),
  
  _728("728"),
  
  _729("729"),
  
  _730("730"),
  
  _731("731"),
  
  _732("732"),
  
  _733("733"),
  
  _734("734"),
  
  _735("735"),
  
  _8("8"),
  
  _9("9"),
  
  A("A"),
  
  AA("AA"),
  
  AB("AB"),
  
  AC("AC"),
  
  AD("AD"),
  
  AE("AE"),
  
  B("B"),
  
  C("C"),
  
  D("D"),
  
  E("E"),
  
  F("F"),
  
  G("G"),
  
  H("H"),
  
  I("I"),
  
  J("J"),
  
  K("K"),
  
  L("L"),
  
  M("M"),
  
  N("N"),
  
  O("O"),
  
  P("P"),
  
  Q("Q"),
  
  R("R"),
  
  S("S"),
  
  T("T"),
  
  U("U"),
  
  V("V"),
  
  W("W"),
  
  X("X"),
  
  Y("Y"),
  
  Z("Z");

  private String value;

  EDIFACTID5025(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EDIFACTID5025 fromValue(String value) {
    for (EDIFACTID5025 b : EDIFACTID5025.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EDIFACTID5025> {
    @Override
    public void write(final JsonWriter jsonWriter, final EDIFACTID5025 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EDIFACTID5025 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EDIFACTID5025.fromValue(value);
    }
  }
}

