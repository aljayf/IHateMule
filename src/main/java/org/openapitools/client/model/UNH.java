/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.S009;
import org.openapitools.client.model.S010;
import org.openapitools.client.model.S016;
import org.openapitools.client.model.S017;
import org.openapitools.client.model.S018;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UNH
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class UNH {
  public static final String SERIALIZED_NAME_MESSAGE_REFERENCE_NUMBER01 = "MessageReferenceNumber_01";
  @SerializedName(SERIALIZED_NAME_MESSAGE_REFERENCE_NUMBER01)
  private String messageReferenceNumber01;

  public static final String SERIALIZED_NAME_MESSAGE_IDENTIFIER02 = "MessageIdentifier_02";
  @SerializedName(SERIALIZED_NAME_MESSAGE_IDENTIFIER02)
  private S009 messageIdentifier02;

  public static final String SERIALIZED_NAME_COMMON_ACCESS_REFERENCE03 = "CommonAccessReference_03";
  @SerializedName(SERIALIZED_NAME_COMMON_ACCESS_REFERENCE03)
  private String commonAccessReference03;

  public static final String SERIALIZED_NAME_STATUSOFTHE_TRANSFER04 = "StatusoftheTransfer_04";
  @SerializedName(SERIALIZED_NAME_STATUSOFTHE_TRANSFER04)
  private S010 statusoftheTransfer04;

  public static final String SERIALIZED_NAME_MESSAGE_SUBSET_IDENTIFICATION05 = "MessageSubsetIdentification_05";
  @SerializedName(SERIALIZED_NAME_MESSAGE_SUBSET_IDENTIFICATION05)
  private S016 messageSubsetIdentification05;

  public static final String SERIALIZED_NAME_MESSAGE_IMPLEMENTATION_GUIDELINE_IDENTIFICATION06 = "MessageImplementationGuidelineIdentification_06";
  @SerializedName(SERIALIZED_NAME_MESSAGE_IMPLEMENTATION_GUIDELINE_IDENTIFICATION06)
  private S017 messageImplementationGuidelineIdentification06;

  public static final String SERIALIZED_NAME_SCENARIO_IDENTIFICATION07 = "ScenarioIdentification_07";
  @SerializedName(SERIALIZED_NAME_SCENARIO_IDENTIFICATION07)
  private S018 scenarioIdentification07;

  public UNH() {
  }

  public UNH messageReferenceNumber01(String messageReferenceNumber01) {
    
    this.messageReferenceNumber01 = messageReferenceNumber01;
    return this;
  }

   /**
   * Get messageReferenceNumber01
   * @return messageReferenceNumber01
  **/
  @javax.annotation.Nonnull

  public String getMessageReferenceNumber01() {
    return messageReferenceNumber01;
  }


  public void setMessageReferenceNumber01(String messageReferenceNumber01) {
    this.messageReferenceNumber01 = messageReferenceNumber01;
  }


  public UNH messageIdentifier02(S009 messageIdentifier02) {
    
    this.messageIdentifier02 = messageIdentifier02;
    return this;
  }

   /**
   * Get messageIdentifier02
   * @return messageIdentifier02
  **/
  @javax.annotation.Nonnull

  public S009 getMessageIdentifier02() {
    return messageIdentifier02;
  }


  public void setMessageIdentifier02(S009 messageIdentifier02) {
    this.messageIdentifier02 = messageIdentifier02;
  }


  public UNH commonAccessReference03(String commonAccessReference03) {
    
    this.commonAccessReference03 = commonAccessReference03;
    return this;
  }

   /**
   * Get commonAccessReference03
   * @return commonAccessReference03
  **/
  @javax.annotation.Nullable

  public String getCommonAccessReference03() {
    return commonAccessReference03;
  }


  public void setCommonAccessReference03(String commonAccessReference03) {
    this.commonAccessReference03 = commonAccessReference03;
  }


  public UNH statusoftheTransfer04(S010 statusoftheTransfer04) {
    
    this.statusoftheTransfer04 = statusoftheTransfer04;
    return this;
  }

   /**
   * Get statusoftheTransfer04
   * @return statusoftheTransfer04
  **/
  @javax.annotation.Nullable

  public S010 getStatusoftheTransfer04() {
    return statusoftheTransfer04;
  }


  public void setStatusoftheTransfer04(S010 statusoftheTransfer04) {
    this.statusoftheTransfer04 = statusoftheTransfer04;
  }


  public UNH messageSubsetIdentification05(S016 messageSubsetIdentification05) {
    
    this.messageSubsetIdentification05 = messageSubsetIdentification05;
    return this;
  }

   /**
   * Get messageSubsetIdentification05
   * @return messageSubsetIdentification05
  **/
  @javax.annotation.Nullable

  public S016 getMessageSubsetIdentification05() {
    return messageSubsetIdentification05;
  }


  public void setMessageSubsetIdentification05(S016 messageSubsetIdentification05) {
    this.messageSubsetIdentification05 = messageSubsetIdentification05;
  }


  public UNH messageImplementationGuidelineIdentification06(S017 messageImplementationGuidelineIdentification06) {
    
    this.messageImplementationGuidelineIdentification06 = messageImplementationGuidelineIdentification06;
    return this;
  }

   /**
   * Get messageImplementationGuidelineIdentification06
   * @return messageImplementationGuidelineIdentification06
  **/
  @javax.annotation.Nullable

  public S017 getMessageImplementationGuidelineIdentification06() {
    return messageImplementationGuidelineIdentification06;
  }


  public void setMessageImplementationGuidelineIdentification06(S017 messageImplementationGuidelineIdentification06) {
    this.messageImplementationGuidelineIdentification06 = messageImplementationGuidelineIdentification06;
  }


  public UNH scenarioIdentification07(S018 scenarioIdentification07) {
    
    this.scenarioIdentification07 = scenarioIdentification07;
    return this;
  }

   /**
   * Get scenarioIdentification07
   * @return scenarioIdentification07
  **/
  @javax.annotation.Nullable

  public S018 getScenarioIdentification07() {
    return scenarioIdentification07;
  }


  public void setScenarioIdentification07(S018 scenarioIdentification07) {
    this.scenarioIdentification07 = scenarioIdentification07;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UNH UNH = (UNH) o;
    return Objects.equals(this.messageReferenceNumber01, UNH.messageReferenceNumber01) &&
        Objects.equals(this.messageIdentifier02, UNH.messageIdentifier02) &&
        Objects.equals(this.commonAccessReference03, UNH.commonAccessReference03) &&
        Objects.equals(this.statusoftheTransfer04, UNH.statusoftheTransfer04) &&
        Objects.equals(this.messageSubsetIdentification05, UNH.messageSubsetIdentification05) &&
        Objects.equals(this.messageImplementationGuidelineIdentification06, UNH.messageImplementationGuidelineIdentification06) &&
        Objects.equals(this.scenarioIdentification07, UNH.scenarioIdentification07);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageReferenceNumber01, messageIdentifier02, commonAccessReference03, statusoftheTransfer04, messageSubsetIdentification05, messageImplementationGuidelineIdentification06, scenarioIdentification07);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UNH {\n");
    sb.append("    messageReferenceNumber01: ").append(toIndentedString(messageReferenceNumber01)).append("\n");
    sb.append("    messageIdentifier02: ").append(toIndentedString(messageIdentifier02)).append("\n");
    sb.append("    commonAccessReference03: ").append(toIndentedString(commonAccessReference03)).append("\n");
    sb.append("    statusoftheTransfer04: ").append(toIndentedString(statusoftheTransfer04)).append("\n");
    sb.append("    messageSubsetIdentification05: ").append(toIndentedString(messageSubsetIdentification05)).append("\n");
    sb.append("    messageImplementationGuidelineIdentification06: ").append(toIndentedString(messageImplementationGuidelineIdentification06)).append("\n");
    sb.append("    scenarioIdentification07: ").append(toIndentedString(scenarioIdentification07)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MessageReferenceNumber_01");
    openapiFields.add("MessageIdentifier_02");
    openapiFields.add("CommonAccessReference_03");
    openapiFields.add("StatusoftheTransfer_04");
    openapiFields.add("MessageSubsetIdentification_05");
    openapiFields.add("MessageImplementationGuidelineIdentification_06");
    openapiFields.add("ScenarioIdentification_07");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("MessageReferenceNumber_01");
    openapiRequiredFields.add("MessageIdentifier_02");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UNH
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UNH.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UNH is not found in the empty JSON string", UNH.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!UNH.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UNH` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UNH.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("MessageReferenceNumber_01").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MessageReferenceNumber_01` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MessageReferenceNumber_01").toString()));
      }
      // validate the required field `MessageIdentifier_02`
      S009.validateJsonObject(jsonObj.getAsJsonObject("MessageIdentifier_02"));
      if ((jsonObj.get("CommonAccessReference_03") != null && !jsonObj.get("CommonAccessReference_03").isJsonNull()) && !jsonObj.get("CommonAccessReference_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CommonAccessReference_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CommonAccessReference_03").toString()));
      }
      // validate the optional field `StatusoftheTransfer_04`
      if (jsonObj.get("StatusoftheTransfer_04") != null && !jsonObj.get("StatusoftheTransfer_04").isJsonNull()) {
        S010.validateJsonObject(jsonObj.getAsJsonObject("StatusoftheTransfer_04"));
      }
      // validate the optional field `MessageSubsetIdentification_05`
      if (jsonObj.get("MessageSubsetIdentification_05") != null && !jsonObj.get("MessageSubsetIdentification_05").isJsonNull()) {
        S016.validateJsonObject(jsonObj.getAsJsonObject("MessageSubsetIdentification_05"));
      }
      // validate the optional field `MessageImplementationGuidelineIdentification_06`
      if (jsonObj.get("MessageImplementationGuidelineIdentification_06") != null && !jsonObj.get("MessageImplementationGuidelineIdentification_06").isJsonNull()) {
        S017.validateJsonObject(jsonObj.getAsJsonObject("MessageImplementationGuidelineIdentification_06"));
      }
      // validate the optional field `ScenarioIdentification_07`
      if (jsonObj.get("ScenarioIdentification_07") != null && !jsonObj.get("ScenarioIdentification_07").isJsonNull()) {
        S018.validateJsonObject(jsonObj.getAsJsonObject("ScenarioIdentification_07"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UNH.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UNH' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UNH> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UNH.class));

       return (TypeAdapter<T>) new TypeAdapter<UNH>() {
           @Override
           public void write(JsonWriter out, UNH value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UNH read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UNH given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UNH
  * @throws IOException if the JSON string is invalid with respect to UNH
  */
  public static UNH fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UNH.class);
  }

 /**
  * Convert an instance of UNH to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

