/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.EDIFACTID3225;
import org.openapitools.client.model.EDIFACTID6411;
import org.openapitools.client.model.EDIFACTID7081;
import org.openapitools.client.model.EDIFACTID9906;
import org.openapitools.client.model.EDIFACTID9962;
import org.openapitools.client.model.EDIFACTID9988;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * C358
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class C358 {
  public static final String SERIALIZED_NAME_COMPANY_IDENTIFICATION01 = "CompanyIdentification_01";
  @SerializedName(SERIALIZED_NAME_COMPANY_IDENTIFICATION01)
  private EDIFACTID9906 companyIdentification01;

  public static final String SERIALIZED_NAME_ITEM_NUMBER02 = "ItemNumber_02";
  @SerializedName(SERIALIZED_NAME_ITEM_NUMBER02)
  private String itemNumber02;

  public static final String SERIALIZED_NAME_TOTAL_NUMBER_OF_ITEMS03 = "TotalNumberOfItems_03";
  @SerializedName(SERIALIZED_NAME_TOTAL_NUMBER_OF_ITEMS03)
  private String totalNumberOfItems03;

  public static final String SERIALIZED_NAME_PLACELOCATION_IDENTIFICATION04 = "PlacelocationIdentification_04";
  @SerializedName(SERIALIZED_NAME_PLACELOCATION_IDENTIFICATION04)
  private EDIFACTID3225 placelocationIdentification04;

  public static final String SERIALIZED_NAME_COMPANY_IDENTIFICATION_NUMBER05 = "CompanyIdentificationNumber_05";
  @SerializedName(SERIALIZED_NAME_COMPANY_IDENTIFICATION_NUMBER05)
  private String companyIdentificationNumber05;

  public static final String SERIALIZED_NAME_DATA_INDICATOR06 = "DataIndicator_06";
  @SerializedName(SERIALIZED_NAME_DATA_INDICATOR06)
  private EDIFACTID9988 dataIndicator06;

  public static final String SERIALIZED_NAME_ITEM_CHARACTERISTIC07 = "ItemCharacteristic_07";
  @SerializedName(SERIALIZED_NAME_ITEM_CHARACTERISTIC07)
  private EDIFACTID7081 itemCharacteristic07;

  public static final String SERIALIZED_NAME_SPECIAL_REQUIREMENT_TYPE08 = "SpecialRequirementType_08";
  @SerializedName(SERIALIZED_NAME_SPECIAL_REQUIREMENT_TYPE08)
  private EDIFACTID9962 specialRequirementType08;

  public static final String SERIALIZED_NAME_MEASUREMENT_VALUE09 = "MeasurementValue_09";
  @SerializedName(SERIALIZED_NAME_MEASUREMENT_VALUE09)
  private String measurementValue09;

  public static final String SERIALIZED_NAME_MEASURE_UNIT_QUALIFIER10 = "MeasureUnitQualifier_10";
  @SerializedName(SERIALIZED_NAME_MEASURE_UNIT_QUALIFIER10)
  private EDIFACTID6411 measureUnitQualifier10;

  public static final String SERIALIZED_NAME_FREE_TEXT11 = "FreeText_11";
  @SerializedName(SERIALIZED_NAME_FREE_TEXT11)
  private String freeText11;

  public C358() {
  }

  public C358 companyIdentification01(EDIFACTID9906 companyIdentification01) {
    
    this.companyIdentification01 = companyIdentification01;
    return this;
  }

   /**
   * Get companyIdentification01
   * @return companyIdentification01
  **/
  @javax.annotation.Nullable

  public EDIFACTID9906 getCompanyIdentification01() {
    return companyIdentification01;
  }


  public void setCompanyIdentification01(EDIFACTID9906 companyIdentification01) {
    this.companyIdentification01 = companyIdentification01;
  }


  public C358 itemNumber02(String itemNumber02) {
    
    this.itemNumber02 = itemNumber02;
    return this;
  }

   /**
   * Get itemNumber02
   * @return itemNumber02
  **/
  @javax.annotation.Nullable

  public String getItemNumber02() {
    return itemNumber02;
  }


  public void setItemNumber02(String itemNumber02) {
    this.itemNumber02 = itemNumber02;
  }


  public C358 totalNumberOfItems03(String totalNumberOfItems03) {
    
    this.totalNumberOfItems03 = totalNumberOfItems03;
    return this;
  }

   /**
   * Get totalNumberOfItems03
   * @return totalNumberOfItems03
  **/
  @javax.annotation.Nullable

  public String getTotalNumberOfItems03() {
    return totalNumberOfItems03;
  }


  public void setTotalNumberOfItems03(String totalNumberOfItems03) {
    this.totalNumberOfItems03 = totalNumberOfItems03;
  }


  public C358 placelocationIdentification04(EDIFACTID3225 placelocationIdentification04) {
    
    this.placelocationIdentification04 = placelocationIdentification04;
    return this;
  }

   /**
   * Get placelocationIdentification04
   * @return placelocationIdentification04
  **/
  @javax.annotation.Nullable

  public EDIFACTID3225 getPlacelocationIdentification04() {
    return placelocationIdentification04;
  }


  public void setPlacelocationIdentification04(EDIFACTID3225 placelocationIdentification04) {
    this.placelocationIdentification04 = placelocationIdentification04;
  }


  public C358 companyIdentificationNumber05(String companyIdentificationNumber05) {
    
    this.companyIdentificationNumber05 = companyIdentificationNumber05;
    return this;
  }

   /**
   * Get companyIdentificationNumber05
   * @return companyIdentificationNumber05
  **/
  @javax.annotation.Nullable

  public String getCompanyIdentificationNumber05() {
    return companyIdentificationNumber05;
  }


  public void setCompanyIdentificationNumber05(String companyIdentificationNumber05) {
    this.companyIdentificationNumber05 = companyIdentificationNumber05;
  }


  public C358 dataIndicator06(EDIFACTID9988 dataIndicator06) {
    
    this.dataIndicator06 = dataIndicator06;
    return this;
  }

   /**
   * Get dataIndicator06
   * @return dataIndicator06
  **/
  @javax.annotation.Nullable

  public EDIFACTID9988 getDataIndicator06() {
    return dataIndicator06;
  }


  public void setDataIndicator06(EDIFACTID9988 dataIndicator06) {
    this.dataIndicator06 = dataIndicator06;
  }


  public C358 itemCharacteristic07(EDIFACTID7081 itemCharacteristic07) {
    
    this.itemCharacteristic07 = itemCharacteristic07;
    return this;
  }

   /**
   * Get itemCharacteristic07
   * @return itemCharacteristic07
  **/
  @javax.annotation.Nullable

  public EDIFACTID7081 getItemCharacteristic07() {
    return itemCharacteristic07;
  }


  public void setItemCharacteristic07(EDIFACTID7081 itemCharacteristic07) {
    this.itemCharacteristic07 = itemCharacteristic07;
  }


  public C358 specialRequirementType08(EDIFACTID9962 specialRequirementType08) {
    
    this.specialRequirementType08 = specialRequirementType08;
    return this;
  }

   /**
   * Get specialRequirementType08
   * @return specialRequirementType08
  **/
  @javax.annotation.Nullable

  public EDIFACTID9962 getSpecialRequirementType08() {
    return specialRequirementType08;
  }


  public void setSpecialRequirementType08(EDIFACTID9962 specialRequirementType08) {
    this.specialRequirementType08 = specialRequirementType08;
  }


  public C358 measurementValue09(String measurementValue09) {
    
    this.measurementValue09 = measurementValue09;
    return this;
  }

   /**
   * Get measurementValue09
   * @return measurementValue09
  **/
  @javax.annotation.Nullable

  public String getMeasurementValue09() {
    return measurementValue09;
  }


  public void setMeasurementValue09(String measurementValue09) {
    this.measurementValue09 = measurementValue09;
  }


  public C358 measureUnitQualifier10(EDIFACTID6411 measureUnitQualifier10) {
    
    this.measureUnitQualifier10 = measureUnitQualifier10;
    return this;
  }

   /**
   * Get measureUnitQualifier10
   * @return measureUnitQualifier10
  **/
  @javax.annotation.Nullable

  public EDIFACTID6411 getMeasureUnitQualifier10() {
    return measureUnitQualifier10;
  }


  public void setMeasureUnitQualifier10(EDIFACTID6411 measureUnitQualifier10) {
    this.measureUnitQualifier10 = measureUnitQualifier10;
  }


  public C358 freeText11(String freeText11) {
    
    this.freeText11 = freeText11;
    return this;
  }

   /**
   * Get freeText11
   * @return freeText11
  **/
  @javax.annotation.Nullable

  public String getFreeText11() {
    return freeText11;
  }


  public void setFreeText11(String freeText11) {
    this.freeText11 = freeText11;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    C358 C358 = (C358) o;
    return Objects.equals(this.companyIdentification01, C358.companyIdentification01) &&
        Objects.equals(this.itemNumber02, C358.itemNumber02) &&
        Objects.equals(this.totalNumberOfItems03, C358.totalNumberOfItems03) &&
        Objects.equals(this.placelocationIdentification04, C358.placelocationIdentification04) &&
        Objects.equals(this.companyIdentificationNumber05, C358.companyIdentificationNumber05) &&
        Objects.equals(this.dataIndicator06, C358.dataIndicator06) &&
        Objects.equals(this.itemCharacteristic07, C358.itemCharacteristic07) &&
        Objects.equals(this.specialRequirementType08, C358.specialRequirementType08) &&
        Objects.equals(this.measurementValue09, C358.measurementValue09) &&
        Objects.equals(this.measureUnitQualifier10, C358.measureUnitQualifier10) &&
        Objects.equals(this.freeText11, C358.freeText11);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyIdentification01, itemNumber02, totalNumberOfItems03, placelocationIdentification04, companyIdentificationNumber05, dataIndicator06, itemCharacteristic07, specialRequirementType08, measurementValue09, measureUnitQualifier10, freeText11);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class C358 {\n");
    sb.append("    companyIdentification01: ").append(toIndentedString(companyIdentification01)).append("\n");
    sb.append("    itemNumber02: ").append(toIndentedString(itemNumber02)).append("\n");
    sb.append("    totalNumberOfItems03: ").append(toIndentedString(totalNumberOfItems03)).append("\n");
    sb.append("    placelocationIdentification04: ").append(toIndentedString(placelocationIdentification04)).append("\n");
    sb.append("    companyIdentificationNumber05: ").append(toIndentedString(companyIdentificationNumber05)).append("\n");
    sb.append("    dataIndicator06: ").append(toIndentedString(dataIndicator06)).append("\n");
    sb.append("    itemCharacteristic07: ").append(toIndentedString(itemCharacteristic07)).append("\n");
    sb.append("    specialRequirementType08: ").append(toIndentedString(specialRequirementType08)).append("\n");
    sb.append("    measurementValue09: ").append(toIndentedString(measurementValue09)).append("\n");
    sb.append("    measureUnitQualifier10: ").append(toIndentedString(measureUnitQualifier10)).append("\n");
    sb.append("    freeText11: ").append(toIndentedString(freeText11)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CompanyIdentification_01");
    openapiFields.add("ItemNumber_02");
    openapiFields.add("TotalNumberOfItems_03");
    openapiFields.add("PlacelocationIdentification_04");
    openapiFields.add("CompanyIdentificationNumber_05");
    openapiFields.add("DataIndicator_06");
    openapiFields.add("ItemCharacteristic_07");
    openapiFields.add("SpecialRequirementType_08");
    openapiFields.add("MeasurementValue_09");
    openapiFields.add("MeasureUnitQualifier_10");
    openapiFields.add("FreeText_11");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to C358
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!C358.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in C358 is not found in the empty JSON string", C358.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!C358.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `C358` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("ItemNumber_02") != null && !jsonObj.get("ItemNumber_02").isJsonNull()) && !jsonObj.get("ItemNumber_02").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ItemNumber_02` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ItemNumber_02").toString()));
      }
      if ((jsonObj.get("TotalNumberOfItems_03") != null && !jsonObj.get("TotalNumberOfItems_03").isJsonNull()) && !jsonObj.get("TotalNumberOfItems_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TotalNumberOfItems_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TotalNumberOfItems_03").toString()));
      }
      if ((jsonObj.get("CompanyIdentificationNumber_05") != null && !jsonObj.get("CompanyIdentificationNumber_05").isJsonNull()) && !jsonObj.get("CompanyIdentificationNumber_05").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CompanyIdentificationNumber_05` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CompanyIdentificationNumber_05").toString()));
      }
      if ((jsonObj.get("MeasurementValue_09") != null && !jsonObj.get("MeasurementValue_09").isJsonNull()) && !jsonObj.get("MeasurementValue_09").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MeasurementValue_09` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MeasurementValue_09").toString()));
      }
      if ((jsonObj.get("FreeText_11") != null && !jsonObj.get("FreeText_11").isJsonNull()) && !jsonObj.get("FreeText_11").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FreeText_11` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FreeText_11").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!C358.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'C358' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<C358> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(C358.class));

       return (TypeAdapter<T>) new TypeAdapter<C358>() {
           @Override
           public void write(JsonWriter out, C358 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public C358 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of C358 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of C358
  * @throws IOException if the JSON string is invalid with respect to C358
  */
  public static C358 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, C358.class);
  }

 /**
  * Convert an instance of C358 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

