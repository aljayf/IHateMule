/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets EDIFACT_ID_9906
 */
@JsonAdapter(EDIFACTID9906.Adapter.class)
public enum EDIFACTID9906 {
  
  _700("700"),
  
  _701("701"),
  
  _702("702"),
  
  _703("703"),
  
  _7YY("7YY"),
  
  AAH("AAH"),
  
  AAL("AAL"),
  
  AAR("AAR"),
  
  AAW("AAW"),
  
  ABR("ABR"),
  
  ACA("ACA"),
  
  ACI("ACI"),
  
  ADR("ADR"),
  
  AEA("AEA"),
  
  AEE("AEE"),
  
  AEW("AEW"),
  
  AFG("AFG"),
  
  AFL("AFL"),
  
  AFR("AFR"),
  
  AGN("AGN"),
  
  AHY("AHY"),
  
  AIC("AIC"),
  
  AIZ("AIZ"),
  
  AJM("AJM"),
  
  ALK("ALK"),
  
  AMC("AMC"),
  
  AML("AML"),
  
  AMU("AMU"),
  
  AMX("AMX"),
  
  ANA("ANA"),
  
  ANG("ANG"),
  
  ANS("ANS"),
  
  ANZ("ANZ"),
  
  ARG("ARG"),
  
  ASA("ASA"),
  
  ATC("ATC"),
  
  AUA("AUA"),
  
  AUI("AUI"),
  
  AUT("AUT"),
  
  AVA("AVA"),
  
  AVN("AVN"),
  
  AWE("AWE"),
  
  AZA("AZA"),
  
  AZW("AZW"),
  
  BAG("BAG"),
  
  BAW("BAW"),
  
  BBC("BBC"),
  
  BCS("BCS"),
  
  BCY("BCY"),
  
  BEE("BEE"),
  
  BER("BER"),
  
  BKP("BKP"),
  
  BLF("BLF"),
  
  BMA("BMA"),
  
  BOT("BOT"),
  
  BPA("BPA"),
  
  BRA("BRA"),
  
  BRU("BRU"),
  
  BRZ("BRZ"),
  
  BWA("BWA"),
  
  BWG("BWG"),
  
  CAL("CAL"),
  
  CAW("CAW"),
  
  CCA("CCA"),
  
  CDG("CDG"),
  
  CES("CES"),
  
  CHH("CHH"),
  
  CIM("CIM"),
  
  CLH("CLH"),
  
  CLX("CLX"),
  
  CMI("CMI"),
  
  CMP("CMP"),
  
  COA("COA"),
  
  CPA("CPA"),
  
  CPN("CPN"),
  
  CRL("CRL"),
  
  CSA("CSA"),
  
  CSN("CSN"),
  
  CTN("CTN"),
  
  CUB("CUB"),
  
  CXA("CXA"),
  
  CYP("CYP"),
  
  DAH("DAH"),
  
  DAL("DAL"),
  
  DAT("DAT"),
  
  DHK("DHK"),
  
  DHX("DHX"),
  
  DLH("DLH"),
  
  DNM("DNM"),
  
  DTA("DTA"),
  
  EIN("EIN"),
  
  ELG("ELG"),
  
  ELL("ELL"),
  
  ELY("ELY"),
  
  ETD("ETD"),
  
  ETH("ETH"),
  
  EVA("EVA"),
  
  EWG("EWG"),
  
  FCN("FCN"),
  
  FDX("FDX"),
  
  FEA("FEA"),
  
  FIN("FIN"),
  
  FJI("FJI"),
  
  GBL("GBL"),
  
  GEC("GEC"),
  
  GFA("GFA"),
  
  GIA("GIA"),
  
  HCY("HCY"),
  
  HDA("HDA"),
  
  HEJ("HEJ"),
  
  HLF("HLF"),
  
  IAC("IAC"),
  
  IAW("IAW"),
  
  IBB("IBB"),
  
  IBE("IBE"),
  
  ICE("ICE"),
  
  ICL("ICL"),
  
  IRA("IRA"),
  
  IRC("IRC"),
  
  IRM("IRM"),
  
  ISR("ISR"),
  
  ISS("ISS"),
  
  IYE("IYE"),
  
  JAI("JAI"),
  
  JAL("JAL"),
  
  JAT("JAT"),
  
  JAZ("JAZ"),
  
  JKK("JKK"),
  
  KAC("KAC"),
  
  KAL("KAL"),
  
  KHA("KHA"),
  
  KLM("KLM"),
  
  KOR("KOR"),
  
  KQA("KQA"),
  
  KRP("KRP"),
  
  LAA("LAA"),
  
  LAM("LAM"),
  
  LAN("LAN"),
  
  LAP("LAP"),
  
  LBC("LBC"),
  
  LCO("LCO"),
  
  LDA("LDA"),
  
  LGL("LGL"),
  
  LIL("LIL"),
  
  LLB("LLB"),
  
  LOT("LOT"),
  
  LPE("LPE"),
  
  LRC("LRC"),
  
  LTU("LTU"),
  
  LXR("LXR"),
  
  MAH("MAH"),
  
  MAK("MAK"),
  
  MAS("MAS"),
  
  MAU("MAU"),
  
  MAZ("MAZ"),
  
  MDG("MDG"),
  
  MEA("MEA"),
  
  MGL("MGL"),
  
  MGX("MGX"),
  
  MLD("MLD"),
  
  MPX("MPX"),
  
  MRS("MRS"),
  
  MSR("MSR"),
  
  MXA("MXA"),
  
  NCA("NCA"),
  
  NMB("NMB"),
  
  NTW("NTW"),
  
  NWA("NWA"),
  
  OAL("OAL"),
  
  OAS("OAS"),
  
  PAL("PAL"),
  
  PAO("PAO"),
  
  PGA("PGA"),
  
  PIA("PIA"),
  
  PLK("PLK"),
  
  PNW("PNW"),
  
  PUA("PUA"),
  
  QFA("QFA"),
  
  QTR("QTR"),
  
  RAM("RAM"),
  
  RBA("RBA"),
  
  REU("REU"),
  
  RJA("RJA"),
  
  ROT("ROT"),
  
  RSN("RSN"),
  
  SAA("SAA"),
  
  SAS("SAS"),
  
  SAT("SAT"),
  
  SBI("SBI"),
  
  SER("SER"),
  
  SEY("SEY"),
  
  SIA("SIA"),
  
  SKX("SKX"),
  
  SLA("SLA"),
  
  SLK("SLK"),
  
  SLM("SLM"),
  
  SOL("SOL"),
  
  SUD("SUD"),
  
  SVA("SVA"),
  
  SWR("SWR"),
  
  SYR("SYR"),
  
  TAI("TAI"),
  
  TAP("TAP"),
  
  TAR("TAR"),
  
  TAY("TAY"),
  
  THA("THA"),
  
  THT("THT"),
  
  THY("THY"),
  
  TMA("TMA"),
  
  TNA("TNA"),
  
  TSO("TSO"),
  
  TUA("TUA"),
  
  UAE("UAE"),
  
  UAL("UAL"),
  
  UPS("UPS"),
  
  USA("USA"),
  
  UYC("UYC"),
  
  VGN("VGN"),
  
  VIR("VIR"),
  
  VLE("VLE"),
  
  VLK("VLK"),
  
  VRG("VRG"),
  
  VSP("VSP"),
  
  VTA("VTA"),
  
  WIF("WIF"),
  
  WNT("WNT");

  private String value;

  EDIFACTID9906(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EDIFACTID9906 fromValue(String value) {
    for (EDIFACTID9906 b : EDIFACTID9906.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EDIFACTID9906> {
    @Override
    public void write(final JsonWriter jsonWriter, final EDIFACTID9906 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EDIFACTID9906 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EDIFACTID9906.fromValue(value);
    }
  }
}

