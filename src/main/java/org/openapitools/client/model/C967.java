/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.EDIFACTID1153;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * C967
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-09T20:30:51.657048-10:00[Pacific/Honolulu]")
public class C967 {
  public static final String SERIALIZED_NAME_REFERENCE_QUALIFIER01 = "ReferenceQualifier_01";
  @SerializedName(SERIALIZED_NAME_REFERENCE_QUALIFIER01)
  private EDIFACTID1153 referenceQualifier01;

  public static final String SERIALIZED_NAME_REFERENCE_NUMBER02 = "ReferenceNumber_02";
  @SerializedName(SERIALIZED_NAME_REFERENCE_NUMBER02)
  private String referenceNumber02;

  public static final String SERIALIZED_NAME_PARTY_NAME03 = "PartyName_03";
  @SerializedName(SERIALIZED_NAME_PARTY_NAME03)
  private String partyName03;

  public static final String SERIALIZED_NAME_TRAVELER_REFERENCE_NUMBER04 = "TravelerReferenceNumber_04";
  @SerializedName(SERIALIZED_NAME_TRAVELER_REFERENCE_NUMBER04)
  private String travelerReferenceNumber04;

  public C967() {
  }

  public C967 referenceQualifier01(EDIFACTID1153 referenceQualifier01) {
    
    this.referenceQualifier01 = referenceQualifier01;
    return this;
  }

   /**
   * Get referenceQualifier01
   * @return referenceQualifier01
  **/
  @javax.annotation.Nonnull

  public EDIFACTID1153 getReferenceQualifier01() {
    return referenceQualifier01;
  }


  public void setReferenceQualifier01(EDIFACTID1153 referenceQualifier01) {
    this.referenceQualifier01 = referenceQualifier01;
  }


  public C967 referenceNumber02(String referenceNumber02) {
    
    this.referenceNumber02 = referenceNumber02;
    return this;
  }

   /**
   * Get referenceNumber02
   * @return referenceNumber02
  **/
  @javax.annotation.Nullable

  public String getReferenceNumber02() {
    return referenceNumber02;
  }


  public void setReferenceNumber02(String referenceNumber02) {
    this.referenceNumber02 = referenceNumber02;
  }


  public C967 partyName03(String partyName03) {
    
    this.partyName03 = partyName03;
    return this;
  }

   /**
   * Get partyName03
   * @return partyName03
  **/
  @javax.annotation.Nullable

  public String getPartyName03() {
    return partyName03;
  }


  public void setPartyName03(String partyName03) {
    this.partyName03 = partyName03;
  }


  public C967 travelerReferenceNumber04(String travelerReferenceNumber04) {
    
    this.travelerReferenceNumber04 = travelerReferenceNumber04;
    return this;
  }

   /**
   * Get travelerReferenceNumber04
   * @return travelerReferenceNumber04
  **/
  @javax.annotation.Nullable

  public String getTravelerReferenceNumber04() {
    return travelerReferenceNumber04;
  }


  public void setTravelerReferenceNumber04(String travelerReferenceNumber04) {
    this.travelerReferenceNumber04 = travelerReferenceNumber04;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    C967 C967 = (C967) o;
    return Objects.equals(this.referenceQualifier01, C967.referenceQualifier01) &&
        Objects.equals(this.referenceNumber02, C967.referenceNumber02) &&
        Objects.equals(this.partyName03, C967.partyName03) &&
        Objects.equals(this.travelerReferenceNumber04, C967.travelerReferenceNumber04);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceQualifier01, referenceNumber02, partyName03, travelerReferenceNumber04);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class C967 {\n");
    sb.append("    referenceQualifier01: ").append(toIndentedString(referenceQualifier01)).append("\n");
    sb.append("    referenceNumber02: ").append(toIndentedString(referenceNumber02)).append("\n");
    sb.append("    partyName03: ").append(toIndentedString(partyName03)).append("\n");
    sb.append("    travelerReferenceNumber04: ").append(toIndentedString(travelerReferenceNumber04)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ReferenceQualifier_01");
    openapiFields.add("ReferenceNumber_02");
    openapiFields.add("PartyName_03");
    openapiFields.add("TravelerReferenceNumber_04");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ReferenceQualifier_01");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to C967
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!C967.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in C967 is not found in the empty JSON string", C967.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!C967.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `C967` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : C967.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("ReferenceNumber_02") != null && !jsonObj.get("ReferenceNumber_02").isJsonNull()) && !jsonObj.get("ReferenceNumber_02").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ReferenceNumber_02` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ReferenceNumber_02").toString()));
      }
      if ((jsonObj.get("PartyName_03") != null && !jsonObj.get("PartyName_03").isJsonNull()) && !jsonObj.get("PartyName_03").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PartyName_03` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PartyName_03").toString()));
      }
      if ((jsonObj.get("TravelerReferenceNumber_04") != null && !jsonObj.get("TravelerReferenceNumber_04").isJsonNull()) && !jsonObj.get("TravelerReferenceNumber_04").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TravelerReferenceNumber_04` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TravelerReferenceNumber_04").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!C967.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'C967' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<C967> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(C967.class));

       return (TypeAdapter<T>) new TypeAdapter<C967>() {
           @Override
           public void write(JsonWriter out, C967 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public C967 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of C967 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of C967
  * @throws IOException if the JSON string is invalid with respect to C967
  */
  public static C967 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, C967.class);
  }

 /**
  * Convert an instance of C967 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

