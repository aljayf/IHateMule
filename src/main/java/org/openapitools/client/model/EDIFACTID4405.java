/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets EDIFACT_ID_4405
 */
@JsonAdapter(EDIFACTID4405.Adapter.class)
public enum EDIFACTID4405 {
  
  _700("700"),
  
  _701("701"),
  
  _702("702"),
  
  _703("703"),
  
  _704("704"),
  
  _705("705"),
  
  _706("706"),
  
  _707("707"),
  
  _708("708"),
  
  _709("709"),
  
  _710("710"),
  
  A("A"),
  
  AC("AC"),
  
  AL("AL"),
  
  ALL("ALL"),
  
  AVA("AVA"),
  
  B("B"),
  
  BD("BD"),
  
  C("C"),
  
  CK("CK"),
  
  CLO("CLO"),
  
  D("D"),
  
  DB("DB"),
  
  DN("DN"),
  
  E("E"),
  
  F("F"),
  
  G("G"),
  
  I("I"),
  
  IF("IF"),
  
  INU("INU"),
  
  IO("IO"),
  
  K("K"),
  
  LIM("LIM"),
  
  NAV("NAV"),
  
  NC("NC"),
  
  NS("NS"),
  
  OF("OF"),
  
  OK("OK"),
  
  OLD("OLD"),
  
  OPE("OPE"),
  
  P("P"),
  
  PAV("PAV"),
  
  PE("PE"),
  
  PR("PR"),
  
  PRF("PRF"),
  
  PRP("PRP"),
  
  R("R"),
  
  RD("RD"),
  
  REP("REP"),
  
  REV("REV"),
  
  RF("RF"),
  
  RQ("RQ"),
  
  S("S"),
  
  SA("SA"),
  
  SB("SB"),
  
  SRV("SRV"),
  
  T("T"),
  
  UNS("UNS"),
  
  V("V"),
  
  WL("WL"),
  
  X("X");

  private String value;

  EDIFACTID4405(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EDIFACTID4405 fromValue(String value) {
    for (EDIFACTID4405 b : EDIFACTID4405.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EDIFACTID4405> {
    @Override
    public void write(final JsonWriter jsonWriter, final EDIFACTID4405 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EDIFACTID4405 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EDIFACTID4405.fromValue(value);
    }
  }
}

