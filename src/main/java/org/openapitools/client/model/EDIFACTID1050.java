/*
 * EdiNation API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets EDIFACT_ID_1050
 */
@JsonAdapter(EDIFACTID1050.Adapter.class)
public enum EDIFACTID1050 {
  
  _1("1"),
  
  _10("10"),
  
  _11("11"),
  
  _12("12"),
  
  _13("13"),
  
  _14("14"),
  
  _15("15"),
  
  _16("16"),
  
  _17("17"),
  
  _18("18"),
  
  _19("19"),
  
  _2("2"),
  
  _20("20"),
  
  _21("21"),
  
  _22("22"),
  
  _23("23"),
  
  _24("24"),
  
  _25("25"),
  
  _26("26"),
  
  _27("27"),
  
  _28("28"),
  
  _29("29"),
  
  _3("3"),
  
  _30("30"),
  
  _31("31"),
  
  _32("32"),
  
  _33("33"),
  
  _34("34"),
  
  _35("35"),
  
  _36("36"),
  
  _37("37"),
  
  _38("38"),
  
  _39("39"),
  
  _4("4"),
  
  _40("40"),
  
  _41("41"),
  
  _42("42"),
  
  _43("43"),
  
  _44("44"),
  
  _45("45"),
  
  _46("46"),
  
  _47("47"),
  
  _48("48"),
  
  _49("49"),
  
  _5("5"),
  
  _50("50"),
  
  _51("51"),
  
  _52("52"),
  
  _53("53"),
  
  _54("54"),
  
  _55("55"),
  
  _56("56"),
  
  _57("57"),
  
  _58("58"),
  
  _59("59"),
  
  _6("6"),
  
  _60("60"),
  
  _61("61"),
  
  _62("62"),
  
  _63("63"),
  
  _64("64"),
  
  _65("65"),
  
  _66("66"),
  
  _67("67"),
  
  _68("68"),
  
  _69("69"),
  
  _7("7"),
  
  _70("70"),
  
  _71("71"),
  
  _72("72"),
  
  _73("73"),
  
  _74("74"),
  
  _75("75"),
  
  _76("76"),
  
  _77("77"),
  
  _78("78"),
  
  _79("79"),
  
  _8("8"),
  
  _80("80"),
  
  _81("81"),
  
  _82("82"),
  
  _83("83"),
  
  _84("84"),
  
  _85("85"),
  
  _86("86"),
  
  _87("87"),
  
  _88("88"),
  
  _89("89"),
  
  _9("9"),
  
  _90("90"),
  
  _91("91"),
  
  _92("92"),
  
  _93("93"),
  
  _94("94"),
  
  _95("95"),
  
  _96("96"),
  
  _97("97"),
  
  _98("98"),
  
  _99("99"),
  
  A("A"),
  
  AA("AA"),
  
  AR("AR"),
  
  AT("AT"),
  
  B("B"),
  
  BM("BM"),
  
  BN("BN"),
  
  BO("BO"),
  
  BP("BP"),
  
  BR("BR"),
  
  BS("BS"),
  
  C("C"),
  
  CB("CB"),
  
  CF("CF"),
  
  CR("CR"),
  
  CS("CS"),
  
  CU("CU"),
  
  D("D"),
  
  DA("DA"),
  
  DC("DC"),
  
  DP("DP"),
  
  DS("DS"),
  
  E("E"),
  
  EN("EN"),
  
  ER("ER"),
  
  ET("ET"),
  
  F("F"),
  
  FF("FF"),
  
  FM("FM"),
  
  FR("FR"),
  
  FU("FU"),
  
  GR("GR"),
  
  H("H"),
  
  HE("HE"),
  
  HT("HT"),
  
  I("I"),
  
  IA("IA"),
  
  J("J"),
  
  JA("JA"),
  
  K("K"),
  
  L("L"),
  
  LX("LX"),
  
  M("M"),
  
  MC("MC"),
  
  MP("MP"),
  
  MX("MX"),
  
  N("N"),
  
  O("O"),
  
  OC("OC"),
  
  OE("OE"),
  
  OM("OM"),
  
  P("P"),
  
  PT("PT"),
  
  Q("Q"),
  
  RA("RA"),
  
  RB("RB"),
  
  RN("RN"),
  
  RO("RO"),
  
  RP("RP"),
  
  RR("RR"),
  
  S("S"),
  
  SA("SA"),
  
  SL("SL"),
  
  SM("SM"),
  
  SP("SP"),
  
  SR("SR"),
  
  ST("ST"),
  
  T("T"),
  
  TA("TA"),
  
  TD("TD"),
  
  TE("TE"),
  
  TF("TF"),
  
  TN("TN"),
  
  TR("TR"),
  
  TS("TS"),
  
  TT("TT"),
  
  U("U"),
  
  V("V"),
  
  VL("VL"),
  
  W("W"),
  
  X("X"),
  
  Y("Y"),
  
  Z("Z");

  private String value;

  EDIFACTID1050(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EDIFACTID1050 fromValue(String value) {
    for (EDIFACTID1050 b : EDIFACTID1050.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EDIFACTID1050> {
    @Override
    public void write(final JsonWriter jsonWriter, final EDIFACTID1050 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EDIFACTID1050 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EDIFACTID1050.fromValue(value);
    }
  }
}

